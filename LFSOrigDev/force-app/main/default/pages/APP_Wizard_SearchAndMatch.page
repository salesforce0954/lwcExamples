<apex:page showHeader="false" action="{!addAccountTopic}" controller="APP_Wizard_SearchAndMatch" 
           standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="html-5.0">    
     
    <!-- SF Ajax API -->
    <apex:includeScript value="/soap/ajax/34.0/connection.js"/>
    
    <!-- JQUERY -->
    <apex:includeScript value="{!$Resource.jqueryMin214}" />
    
    <!-- Angular Dependencies -->
    <apex:includeScript value="{!$Resource.angularJS147}" /> 
   
    <!-- Bootstrap Dependencies -->
    <apex:stylesheet value="{!URLFOR($Resource.bootstrapstaffui, '/bootstrap/css/bootstrap.min.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.bootstrapstaffui, '/bootstrap/js/bootstrap.min.js')}" />
    
    <!-- Lightning Design -->
    <apex:stylesheet value="{!URLFOR($Resource.SLDS090, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <apex:includeScript value="{!$Resource.svg4everybody}" />

    <!-- Streaming API -->
    <apex:includeScript value="{!URLFOR($Resource.LAB_StreamingApiDemo, '/js/cometd.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.LAB_StreamingApiDemo, '/js/json2.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.LAB_StreamingApiDemo, '/js/jquery.cometd.js')}"/>

    <script>
 
    // Global Variables
    var hasInitConnection = false; // Streaming Connection flag
    var hasSubTopicAC = false;  // Streaming Topic subscription flag
    var sApp = angular.module('sApp', []); // Angular App
    var searchInfo1 = ''; // Applicant Search Id App 1
    var searchInfo2 = ''; // Applicant Search Id App 2
    var user1Timeout; // App 1 timeout variable
    var user2Timeout; // App 2 timeout variable
    var oldDLValue1 = $('#app1_customer_id_type__c').val(); // Special old DL value for NZ app 1
    var oldDLValue2 = $('#app2_customer_id_type__c').val(); // Special old DL value for NZ app 2
    
    // Validate Search Button Enable    
    function appSearchBtnValidate(applicantType) {
        var country = '{!JSENCODE($CurrentPage.parameters.country)}';
        
        var scope = angular.element($("#mainSM")).scope();
        
        var fName = $('#app' + applicantType + '_first_name__c');
        var lName = $('#app' + applicantType + '_last_name__c');
        var dd = $('#app' + applicantType + '_dob_dd');
        var dm = $('#app' + applicantType + '_dob_months');
        var dy = $('#app' + applicantType + '_dy');
        var mob = $('#app' + applicantType + '_mobile__c');
        var hm = $('#app' + applicantType + '_home__c');
        var wk = $('#app' + applicantType + '_work__c');
        var pRes = $('#app' + applicantType + '_postcode_res__c');
        var dLic = $('#app' + applicantType + '_drivers_lic_no__c');
        var dFlag = $('#app' + applicantType + '_drivers_lic_flg__c');
        
        var cIdType = $('#app' + applicantType + '_customer_id_type__c');
        var cIdNumber = $('#app' + applicantType + '_id_number__c');
        
        var disableFlag = false;
        
        console.log('fNameVal:' + fName.val());
        console.log('fNameError:' + fName.hasClass('error'));
        console.log('lNameVal:' + lName.val());
        console.log('lNameError:' + lName.hasClass('error'));
        console.log('ddVal:' + dd.val());
        console.log('ddError:' + dd.hasClass('error'));
        console.log('dmVal:' + dm.val());
        console.log('dmError:' + dm.hasClass('error'));
        console.log('dyVal:' + dy.val());
        console.log('dyError:' + dy.hasClass('error')); 
        
        console.log('mobVal:' + mob.val());
        console.log('mobError:' + mob.hasClass('error'));
        console.log('hmVal:' + hm.val());
        console.log('hmError:' + hm.hasClass('error'));
        console.log('wkVal:' + wk.val());
        console.log('wkError:' + wk.hasClass('error'));
        
        console.log('dLicVal:' + dLic.val());
        console.log('dLicError:' + dLic.hasClass('error'));
        console.log('dLicFlag:' + dFlag.is(':checked'));
        
        console.log('cIdTypeVal:' + cIdType.val());
        console.log('cIdTypeError:' + cIdType.hasClass('error'));
        
        console.log('cIdNumberTypeVal:' + cIdNumber.val());
        console.log('cIdNumberTypeError:' + cIdNumber.hasClass('error'));
        
        if(fName.val()=='' || fName.hasClass('error') ||
           lName.val()=='' || lName.hasClass('error') ||
           dd.val()=='' || dd.hasClass('error') ||
           dm.val()=='' || dm.hasClass('error') ||
           dy.val()=='' || dy.hasClass('error') ||
           
           ( (mob.val()=='' || mob.hasClass('error')) &&  
             (hm.val()=='' || hm.hasClass('error')) && 
                 (country=='NZ') ) ||
           
           ( (mob.val()=='' || mob.hasClass('error')) &&  
             (hm.val()=='' || hm.hasClass('error')) && 
             ((wk.val()=='' || wk.hasClass('error')) && country=='AU') ) ||
           
           pRes.val()=='' || pRes.hasClass('error') || 
           (((dLic.val()=='' && dFlag.is(':checked')==false)  || dLic.hasClass('error')) && country=='AU') ||
           
           ( (cIdType.val()=='NZ Driver Licence' && (cIdNumber.val()=='' || cIdNumber.hasClass('error')) ) && country=='NZ') ){
            
            disableFlag = true;
        }else{
            disableFlag = false;
        }
         console.log(applicantType+'disableFlag.......'+disableFlag);
        if(applicantType==1){
            scope.searchDisable1 = disableFlag;
        }else if(applicantType==2){
            scope.searchDisable2 = disableFlag;
        }
        
        console.log('Search Button Enable Validation Log.......');
        console.log('Search Enable Flag 1:' + scope.searchDisable1);
        console.log('Search Enable Flag 2:' + scope.searchDisable2);
        scope.$apply();
    }
    function OnloadSearchBtnValidate() {
        console.log('...OnloadSearchBtnValidate.....');
        var country = '{!JSENCODE($CurrentPage.parameters.country)}';
        var scope = angular.element($("#mainSM")).scope();
        window.setTimeout(() => {
                var fName = $('#app1_first_name__c');
                var lName = $('#app1_last_name__c');
                var dd = $('#app1_dob_dd');
                var dm = $('#app1_dob_months');
                var dy = $('#app1_dy');
                var mob = $('#app1_mobile__c');
                var hm = $('#app1_home__c');
                var wk = $('#app1_work__c');
                var pRes = $('#app1_postcode_res__c');
                var dLic = $('#app1_drivers_lic_no__c');
                var dFlag = $('#app1_drivers_lic_flg__c');
                var cIdType = $('#app1_customer_id_type__c');
                var cIdNumber = $('#app1_id_number__c');
                
                
                console.log('fNameVal:' + fName.val());
                console.log('fNameError:' + fName.hasClass('error'));
                console.log('lNameVal:' + lName.val());
                console.log('lNameError:' + lName.hasClass('error'));
                console.log('ddVal:' + dd.val());
                console.log('ddError:' + dd.hasClass('error'));
                console.log('dmVal:' + dm.val());
                console.log('dmError:' + dm.hasClass('error'));
                console.log('dyVal:' + dy.val());
                console.log('dyError:' + dy.hasClass('error')); 
                
                console.log('mobVal:' + mob.val());
                console.log('mobError:' + mob.hasClass('error'));
                console.log('hmVal:' + hm.val());
                console.log('hmError:' + hm.hasClass('error'));
                console.log('wkVal:' + wk.val());
                console.log('wkError:' + wk.hasClass('error'));
                
                console.log('dLicVal:' + dLic.val());
                console.log('dLicError:' + dLic.hasClass('error'));
                console.log('dLicFlag:' + dFlag.is(':checked'));
                
                console.log('cIdTypeVal:' + cIdType.val());
                console.log('cIdTypeError:' + cIdType.hasClass('error'));
                
                console.log('cIdNumberTypeVal:' + cIdNumber.val());
                console.log('cIdNumberTypeError:' + cIdNumber.hasClass('error'));
            
                var disableFlag = false;
                if(fName.val()=='' || fName.hasClass('error') || lName.val()=='' || lName.hasClass('error') || dd.val()=='' || dd.hasClass('error') || dm.val()=='' || dm.hasClass('error') || dy.val()=='' || dy.hasClass('error') ||
               
               ((mob.val()=='' || mob.hasClass('error')) && (hm.val()=='' || hm.hasClass('error')) && (country=='NZ')) ||
               ((mob.val()=='' || mob.hasClass('error')) && (hm.val()=='' || hm.hasClass('error')) && ((wk.val()=='' || wk.hasClass('error')) && country=='AU') ) || pRes.val()=='' || pRes.hasClass('error') || 
               (((dLic.val()=='' && dFlag.is(':checked')==false)  || dLic.hasClass('error')) && country=='AU') ||
               ( (cIdType.val()=='NZ Driver Licence' && (cIdNumber.val()=='' || cIdNumber.hasClass('error')) ) && country=='NZ') ){
                
                disableFlag = true;
            }else{
                scope.searchBtnEnable = false;
                disableFlag = false;
                
            }
            scope.searchDisable1 = disableFlag;
            scope.$apply();
            console.log(scope.searchDisable1+'disableFlag.......'+scope.searchBtnEnable);
            }, 5000);
    }
    // Perform document ready actions
    (function($){
        $(document).ready(function() {  
            
            // Fire streaming unsubscribe on page or tab close
            window.onbeforeunload = function(){
                $.cometd.unsubscribe(ApplicantCLVSub);
                $.cometd.unsubscribe(ApplicantAccSub);
                $.cometd.disconnect();
            }

            // Initialize search modal styles
            $('#sModal').on('hidden.bs.modal', function () {
                $('.modal-content',this).css({width:'auto',height:'auto', 'max-height':'100%','max-width':'100%'});
            })
            
            // Position search buttons
            $('#app1_div_search_clv').append( $('#app1SearchBtn'));
            $('#app2_div_search_clv').append( $('#app2SearchBtn'));
            $('#app1SearchBtn').removeClass('slds-hide');
            $('#app2SearchBtn').removeClass('slds-hide');
            
            // Position search dev/test helper tools
            $('#app1_div_search_clv').after( $('#testSearchHelpers')); 
            $('#testSearchHelpers').removeClass('slds-hide');
            
            // Position debt table 
            $('#app_debt_results_clv').append( $('#clvDebtTable').removeClass('slds-hide') );
            
            // Add search clear class to to applicant type picklist 
            var searchClearClass = 'searchClearClass'
            $('#app_Application_Type__c').addClass(searchClearClass);
            
            // Search clear class on change event
            $('.searchClearClass').on('change', function () {
                var appType = $('#app_Application_Type__c').val();
                if(appType=='Single' || appType==' '){
                    resetSearch2(); // Flush search
                    streamClear(); // Clear Streaming
                }
            }); 
            
            // Add search clear event in personal details fields for applicant 1
            var app1ValClass = 'app1SearchVal'
            
            $('#app1_first_name__c').addClass(app1ValClass);
            $('#app1_middle_name__c').addClass(app1ValClass); 
            $('#app1_last_name__c').addClass(app1ValClass);
            $('#app1_dob_dd').addClass(app1ValClass);
            $('#app1_dob_months').addClass(app1ValClass);
            $('#app1_dy').addClass(app1ValClass);
            $('#app1_mobile__c').addClass(app1ValClass);
            $('#app1_home__c').addClass(app1ValClass);
            $('#app1_work__c').addClass(app1ValClass);
            $('#app1_postcode_res__c').addClass(app1ValClass);
            $('#app1_drivers_lic_no__c').addClass(app1ValClass);
            $('#app1_drivers_lic_flg__c').addClass(app1ValClass);
            
            $('#app1_customer_id_type__c').addClass('nzDLApp1SearchVal');
            $('#app1_id_number__c').addClass('nzDLApp1SearchVal');
            
            $('#app1_postcode_pre__c').addClass(app1ValClass);
            $('#app1_previousPostcode').addClass(app1ValClass);

            $('#app1_res_full_add').addClass(app1ValClass);
            
            $('.app1SearchVal').on('input change', function () {
                resetSearch1();
                streamClear(); 
            });
            
            $('.nzDLApp1SearchVal').on('input change', function () {
                var newDLValue = $('#app1_customer_id_type__c').val();
                
                if(newDLValue=='NZ Driver Licence' || oldDLValue1 =='NZ Driver Licence' ){
                    resetSearch1();
                    streamClear(); 
                } 
                
                oldDLValue1 = newDLValue;
            });
            
            // Add search clear event in personal details fields for applicant 2
            var app2ValClass = 'app2SearchVal'
            
            $('#app2_first_name__c').addClass(app2ValClass);
            $('#app2_middle_name__c').addClass(app2ValClass);
            $('#app2_last_name__c').addClass(app2ValClass);
            $('#app2_dob_dd').addClass(app2ValClass);
            $('#app2_dob_months').addClass(app2ValClass);
            $('#app2_dy').addClass(app2ValClass);
            $('#app2_mobile__c').addClass(app2ValClass);
            $('#app2_home__c').addClass(app2ValClass);
            $('#app2_work__c').addClass(app2ValClass);
            $('#app2_postcode_res__c').addClass(app2ValClass);
            $('#app2_drivers_lic_no__c').addClass(app2ValClass);
            $('#app2_drivers_lic_flg__c').addClass(app2ValClass);
            
            $('#app2_customer_id_type__c').addClass('nzDLApp2SearchVal');
            $('#app2_id_number__c').addClass('nzDLApp2SearchVal');
            
            $('#app2_postcode_pre__c').addClass(app2ValClass);
            $('#app2_previousPostcode').addClass(app2ValClass);
            
            $('#app2_res_full_add').addClass(app2ValClass);
            
            $('.app2SearchVal').on('input change', function () {
               resetSearch2(); 
               streamClear(); 
            }); 
            
            $('.nzDLApp2SearchVal').on('input change', function () {
                var newDLValue = $('#app2_customer_id_type__c').val();
                
                if(newDLValue=='NZ Driver Licence' || oldDLValue2 =='NZ Driver Licence' ){
                    resetSearch2();
                    streamClear(); 
                }
                
                oldDLValue2 = newDLValue;
            });
            
            // Define Applicant 1 fields that triggers search button enable validation
            var app1SearchEnable = 'app1SearchEnable'
            $('#app1_first_name__c').addClass(app1SearchEnable);
            $('#app1_last_name__c').addClass(app1SearchEnable);
            $('#app1_dob_dd').addClass(app1SearchEnable);
            $('#app1_dob_months').addClass(app1SearchEnable);
            $('#app1_dy').addClass(app1SearchEnable);
            $('#app1_mobile__c').addClass(app1SearchEnable);
            $('#app1_home__c').addClass(app1SearchEnable);
            $('#app1_work__c').addClass(app1SearchEnable);
            $('#app1_postcode_res__c').addClass(app1SearchEnable);
            $('#app1_drivers_lic_no__c').addClass(app1SearchEnable);
            $('#app1_drivers_lic_flg__c').addClass(app1SearchEnable);
            $('#app1_customer_id_type__c').addClass(app1SearchEnable);
            $('#app1_id_number__c').addClass(app1SearchEnable);
            $('#app1_res_full_add').addClass(app1SearchEnable);

            // Define Applicant 2 fields that triggers search button enable validation
            var app2SearchEnable = 'app2SearchEnable'
            $('#app2_first_name__c').addClass(app2SearchEnable);
            $('#app2_last_name__c').addClass(app2SearchEnable);
            $('#app2_dob_dd').addClass(app2SearchEnable);
            $('#app2_dob_months').addClass(app2SearchEnable);
            $('#app2_dy').addClass(app2SearchEnable);
            $('#app2_mobile__c').addClass(app2SearchEnable);
            $('#app2_home__c').addClass(app2SearchEnable);
            $('#app2_work__c').addClass(app2SearchEnable);
            $('#app2_postcode_res__c').addClass(app2SearchEnable);
            $('#app2_drivers_lic_no__c').addClass(app2SearchEnable);
            $('#app2_drivers_lic_flg__c').addClass(app2SearchEnable);
            $('#app2_customer_id_type__c').addClass(app2SearchEnable);
            $('#app2_id_number__c').addClass(app2SearchEnable);
            $('#app2_res_full_add').addClass(app2SearchEnable);
           
            // Add hanlder events to search enable classes for applicant 1 fields
            $('.app1SearchEnable').on('blur', function () {
                appSearchBtnValidate(1); 
                console.log('....Call appSearchBtnValidate function 1...');
            }); 
            
            // Add hanlder events to search enable classes for applicant 2 fields
            $('.app2SearchEnable').on('blur', function () {
                appSearchBtnValidate(2); 
                console.log('....Call appSearchBtnValidate function 2...');
            }); 
            OnloadSearchBtnValidate();
            
        });
   
    })(jQuery) 
    
    
    
    // Instantiate controller 
    sApp.controller('searchResultCtrl',function($scope) {
        sforce.connection.sessionId = "{!$Api.Session_ID}"; // User Session
        $scope.AARecTypeMap = getAARecTypeMap();  // Get Applicant Account Recordtypes

        $scope.clvCountApp1 = new Map(); // CLV Counter 
        $scope.clvCountApp2 = new Map(); // CLV Counter 
        
        $scope.disableCLVButton = false; // CLV selection button enable/disable flag
        
        $scope.hasMatchCLV1 = new Map(); // CLV has sure match map (flag Id-CLV, value-boolean has match) 
        $scope.hasMatchCLV2 = new Map(); // CLV has sure match map (flag Id-CLV, value-boolean has match) 
        
        $scope.searchDisable1 = true; // Search disable button flag
        $scope.searchDisable2 = true; // Search disable button flag
        
        // Mock search flag
        $scope.mockEnable = false; 
        $scope.searchBtnEnable = false;
        $scope.errNoCLVEnable = false;
        $scope.errFailCLVEnable = false;
        $scope.errNoAccEnable = false;
        $scope.errFailAccEnable = false;
        $scope.errTimeoutEnable = false;
        $scope.errTestEnable = false;
        
        // Search validation variables
        $scope.sMatchError = false;
        $scope.sMatchErrorErr = '';
        
        $scope.app1SValidated = false; // Search completed flag
        $scope.app2SValidated = false; // Search completed flag
        
        $scope.resultCount1 = 0; // clv result count 
        $scope.resultCount2 = 0; // clv result count
        
        $scope.resultCountAcc1 = 0; // account result count
        $scope.resultCountAcc2 = 0; // account result count
        
        $scope.hasAccError1 = false; // search error flag
        $scope.hasAccError2 = false; // search error flag
        
        $scope.noMatchAcc1 = false; // no match flag
        $scope.noMatchAcc2 = false; // no match flag
        
        $scope.hostAccFail1 = false; // host account fail flag
        $scope.hostAccFail2 = false; // host account fail flag

        $scope.app1MResult = 'slds-hide'; // Result message flag
        $scope.app2MResult = 'slds-hide'; // Result message flag
        
        $scope.app1Status = 'slds-hide'; // Status message flag
        $scope.app1Spinner = 'slds-hide'; // Spinner flag
        
        $scope.app2Status = 'slds-hide'; // Status message flag
        $scope.app2Spinner = 'slds-hide'; // Spinner flag
        
        $scope.showSResult = 'slds-hide'; // Show search result
        $scope.showAAResult = 'slds-hide'; // Show account result
        
        $scope.tabFlip = true; // Search and match Tab selection flag

        $scope.appMsg1 = ''; // Search result message
        $scope.appMsg2 = ''; // Search result message
        
        $scope.searchResults = []; // CLV result array
        $scope.searchResults2 = []; // CLV result array
        $scope.searchResultsFinal = []; // Final list of clv result for update for applicant 1
        $scope.searchResultsFinal2 = []; // Final list of clv result for update for applicant 2
        
        $scope.searchMap = new Map(); // CLV result map
        $scope.searchMap2 = new Map(); // CLV result map
        
        $scope.CLVhasAccount = new Map(); // CLV has account checker map
        $scope.CLVhasAccount2 = new Map(); // CLV has account checker map
        
        $scope.appAccResults = new Map(); // Account result map
        
        $scope.debtsList = []; // Prepopulated debts array
        $scope.debtsList2 = []; // Prepopulated debts array
        
        $scope.applicantAccList = []; // Account array
        $scope.applicantAccMap = new Map(); // Account map
        $scope.applicantAccMapTemp = new Map(); // Account temporary map for disbursement calculation
        
        // Involve party/folder processing variables
        $scope.involvePartyMap = new Map(); 
        $scope.hasPulledInvolveParty = false;
        $scope.icbsIdSet = [];
        
        $scope.appAccCust = {};
        $scope.appAccCust2 = {};

        // Top clv checker variables
        $scope.topCLVScoreMap = new Map();
        $scope.topCLVScoreMap2 = new Map();
        
        $scope.topCLVDupMap = new Map();
        $scope.topCLVDupMap2 = new Map();
        
        // Refinance variables
        $scope.disburseMap = new Map();
        $scope.refLoanMap = new Map();
        $scope.loanAppAcc;
        
        // Float parser
        $scope.floatParser = function(valVar){
            return parseFloat(valVar);
        }
        // Tab search selection method
        $scope.searchTab = function(flipVar){
            if(flipVar==1){
                $scope.tabFlip = true;
            }else{
                $scope.tabFlip = false;
            }
        }

        // Payoff quote modal setter
        $scope.setAppModal = function(loanAppAcc){
            $scope.loanAppAcc = loanAppAcc;
            $('#accModal').modal('show');
        }

        // Core Top CLV checker method
        $scope.checkTopCLV = function(resultVar, applicantType){
            if(applicantType==1){ // If applicant 1
                if($scope.topCLVScoreMap.get(resultVar.CLV__c) == resultVar.Match_Score__c){
                    // If there are no top clv duplicates based on grade and score
                    // select clv as top clv match
                    if( $scope.topCLVDupMap.has(resultVar.CLV__c) == false){ 
                        return true;
                    // If clv has account and top based on score and grade, select clv
                    // If there are no accounts, pick random top clv
                    // same rule applies for applicant 2
                    }else{
                        if($scope.CLVhasAccount.has(resultVar.CLV__c)){
                            if( $scope.appAccResults.get(resultVar.Id)!=null){
                                if($scope.appAccResults.get(resultVar.Id).length>0){
                                    return true;
                                }else{
                                    return false;
                                }
                            }
                        }else{
                            if($scope.topCLVDupMap.get(resultVar.CLV__c).Id == resultVar.Id){
                                return true;
                            }else{
                                return false;
                            }
                        }
                    }
                }else{
                    return false;
                }
            }else if(applicantType==2){ // If applicant 2
                if($scope.topCLVScoreMap2.get(resultVar.CLV__c) == resultVar.Match_Score__c){
                    if( $scope.topCLVDupMap2.has(resultVar.CLV__c) == false){
                        return true;
                    }else{
                        if($scope.CLVhasAccount2.has(resultVar.CLV__c)){
                            if( $scope.appAccResults.get(resultVar.Id)!=null){
                                if($scope.appAccResults.get(resultVar.Id).length>0){
                                    return true;
                                }else{
                                    return false;
                                }
                            }
                        }else{
                            if($scope.topCLVDupMap2.get(resultVar.CLV__c).Id == resultVar.Id){
                                return true;
                            }else{
                                return false;
                            }
                        }
                    }
                }else{
                    return false;
                }
            }else{
                return false;
            }
        }

        // Core debts and folder prepopulation 
        // method based on clv accounts selected  
        $scope.populateDebts = function(){
            // Disable select CLV button
            $scope.disableCLVButton = true;
            
            // Clear Account List 
            $scope.applicantAccList = [];
            
            // Clear ICBS Involved Parties
            $scope.involvePartyMap = new Map();
            
            // ICBS Account ID Set
            $scope.icbsIdSet = [];
            
            // Determine current selected user and 
            // clear debt list and assign search loop
            var fullSearchResult;
            
            if( $scope.tabFlip == true){
               $scope.app1SValidated = false;
               fullSearchResult = $scope.searchResults;
               $scope.searchResultsFinal = [];
               // Create Deep Copy of CLV App 1
                for(acI in $scope.searchResults){   
                    $scope.searchResultsFinal.push(angular.copy($scope.searchResults[acI]));
                }
            }else  if($scope.tabFlip == false){
               $scope.app2SValidated = false;
               fullSearchResult = $scope.searchResults2;
               $scope.searchResultsFinal2 = [];
               // Create Deep Copy of CLV App 1
                for(acI in $scope.searchResults2){   
                    $scope.searchResultsFinal2.push(angular.copy($scope.searchResults2[acI]));
                }
            }
            
            var tempDebtList = [];
            
            // Loop across CLV Results
            for(acI in fullSearchResult){   
                var ssVar = fullSearchResult[acI];  // Pull CLV
                // Determine if there's Id and it is selected by the user
                if(ssVar.Id!=null && ssVar.User_Match_Flag__c == true){
                    // Pull child applicant account
                    var aaChildList = $scope.appAccResults.get(ssVar.Id);
                    // Loop Across Child Applicant Account
                    for( aaI in aaChildList){
                        var aaRec = aaChildList[aaI];
                        if(aaRec.Id!=null&&aaRec.Message_Code_Host__c == '0000'){
                            // Tag Applicant Account's Parent Applicant
                            if(ssVar.ApplicantType == 'Applicant 1'){
                                aaRec.ApplicantType = 'Applicant 1';
                            }else if(ssVar.ApplicantType == 'Applicant 2'){
                                aaRec.ApplicantType = 'Applicant 2';
                            }
                            
                            // Populate Applicant Account List and Map
                            $scope.applicantAccList.push(aaRec);
                            $scope.applicantAccMap.set(aaRec.Id,aaRec);
                            $scope.applicantAccMapTemp.set(angular.copy(aaRec.Id), angular.copy(aaRec));
  
                            // Populate Debts based on Applicant Account RecordType
                            var aaRT = $scope.AARecTypeMap.get(aaRec.RecordTypeId); 
                            var debtsObject = {Prepopulated__c:true, Debt_Auto_Created__c:true,isSelected:true,Applicant_Account__c:aaRec.Id, RefinanceDebt:false,DebtConsolidate:false,ReduceCredit:false};
                            var hasMatch = false;
                            
                            // Tag Applicant Account's Parent Applicant
                            if(ssVar.ApplicantType == 'Applicant 1'){
                                debtsObject.ApplicantType = 'Applicant 1';
                            }else if(ssVar.ApplicantType == 'Applicant 2'){
                                debtsObject.ApplicantType = 'Applicant 2';
                            }
                            
                            if(aaRT.name=='Genesis' && (aaRec.Current_Balance__c!=null && aaRec.Current_Balance__c>0)){
                                debtsObject.Debt_Category__c = 'Car loan';
                                debtsObject.Financier_Name__c = 'GE';
                                debtsObject.Car_Personal_Bal_Amt__c = aaRec.Current_Balance__c;
                                debtsObject.Car_Personal_Repay_Amt__c = aaRec.Next_Payment_Amount_Due__c;
                                debtsObject.Car_Personal_Repay_Int__c = 'Month';
                                debtsObject.Car_Personal_Borrowed_Amt__c = aaRec.Amount_Financed__c;
                                hasMatch = true;
                            }else if(aaRT.name=='Vision' && aaRec.Closed_Date__c==null && (aaRec.Maximum_Credit_Limit__c!=null && aaRec.Maximum_Credit_Limit__c>0)){
                                debtsObject.Debt_Category__c = 'Credit card';
                                debtsObject.Financier_Name__c = 'GE';
                                debtsObject.Type_of_Credit_Card__c = 'Others'; 
                                debtsObject.Credit_Limit_Amt__c = aaRec.Maximum_Credit_Limit__c;
                                debtsObject.Card_Overdraft_Bal_Amt__c = aaRec.Current_Balance__c;
                                debtsObject.ReduceLimit = aaRec.Maximum_Credit_Limit__c; 
                                hasMatch = true;
                            }else if(aaRT.name=='ICBS' && (aaRec.Current_Balance__c!=null && aaRec.Current_Balance__c>0)){
                                debtsObject.Debt_Category__c = 'Personal loan';
                                debtsObject.Financier_Name__c = 'GE';
                                debtsObject.Car_Personal_Bal_Amt__c = aaRec.Current_Balance__c; 
                                debtsObject.Car_Personal_Repay_Amt__c = aaRec.Installment_Amount__c;
                                debtsObject.Car_Personal_Repay_Int__c = 'Month';
                                debtsObject.Car_Personal_Borrowed_Amt__c = aaRec.Opening_Balance__c;
                                hasMatch = true;
                            }
                            
                            if(aaRT.name=='ICBS'){
                                // Store ICBS Id in a Set
                                $scope.icbsIdSet.push(aaRec.Id);
                            }
                            
                            // If there is a match, add created debt to official list
                            if(hasMatch==true){
                                tempDebtList.push(debtsObject);
                            }
                        }
                    }
                }
            }   
            
            if( $scope.tabFlip == true){
               $scope.debtsList = tempDebtList;
                
                // Clear Disbursement
                for(key in $scope.disburseMap){
                    if($scope.disburseMap[key].ApplicantType=='Applicant 1'){
                        delete $scope.disburseMap[key];
                    }
                }
                
                // Clear Loan
                for(key in $scope.refLoanMap){
                    if($scope.refLoanMap[key].ApplicantType=='Applicant 1'){
                        delete $scope.refLoanMap[key];
                    }
                }
                
            }else  if($scope.tabFlip == false){
               $scope.debtsList2 = tempDebtList;
                
                // Clear Disbursement
                for(key in $scope.disburseMap){
                    if($scope.disburseMap[key].ApplicantType=='Applicant 2'){
                        delete $scope.disburseMap[key];
                    }
                }
                
                // Clear Loan
                for(key in $scope.refLoanMap){
                    if($scope.refLoanMap[key].ApplicantType=='Applicant 2'){
                        delete $scope.refLoanMap[key];
                    }
                }
            }
            
            // Tag debt duplicate
            $scope.tagDuplicateDebt();
            
            // Refresh Loan Amount Total
            addRefinance();
            
            // Refresh monthly repayment total
            calculateGEDebts();
            
            console.log('Applicant 1 Debts:' + JSON.stringify($scope.debtsList));
            console.log('Applicant 2 Debts:' + JSON.stringify($scope.debtsList2));
            
            // Duplicate original applicant account map 
            console.log('AccountSet:' + JSON.stringify($scope.icbsIdSet));
            
            // If there is an ICBS account, pull its child Folder (Involve Parties)
            if($scope.icbsIdSet.length>0){
                
                Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.APP_Wizard_SearchAndMatch.queryFolder}",$scope.icbsIdSet,
                                                                                    function(result, event){
                                                                                        console.log("Type:" + event.type);
                                                                                        console.log("Message:" + event.message);
                                                                                        console.log("Status:" + event.status);
                                                                                        console.log("Value:" + result);
                                                                                        console.log("Involve Party:" + JSON.stringify(result));
                                                                                        
                                                                                        
                                                                                        var IsTwoMatch = false;
                                                                                        
                                                                                        var aaIIList = [];
                                                                                        
                                                                                         for(aIP in result){
                                                                                            console.log("Result 1 Involve Party:" + JSON.stringify(result[aIP]));
                                                                                            console.log("Result 2 Involve Party:" + JSON.stringify(aIP)); 
                                                                                             if(result[aIP].Applicant_Account__c!=null){
                                                                                                if($scope.involvePartyMap.has(result[aIP].Applicant_Account__c)){
                                                                                                    var aaIIList = $scope.involvePartyMap.get(result[aIP].Applicant_Account__c);
                                                                                                    aaIIList.push(result[aIP]);
                                                                                                    if(aaIIList.length>1){
                                                                                                        IsTwoMatch = true;
                                                                                                    }
                                                                                                    $scope.involvePartyMap.set(result[aIP].Applicant_Account__c,aaIIList);
            
                                                                                                }else{  
                                                                                                    var aaIIList = [];
                                                                                                    aaIIList.push(result[aIP]); 
                                                                                                    console.log('init list:' + JSON.stringify(aaIIList));
                                                                                                    $scope.involvePartyMap.set(result[aIP].Applicant_Account__c,aaIIList);
                                                                                                }
                                                                                                 console.log('getValue:' + JSON.stringify($scope.involvePartyMap.get(result[aIP].Applicant_Account__c)));
                                                                                            }
                                                                                        }
                                                                                       
                                                                                        if(IsTwoMatch==true){
                                                                                            // Hide search result and show account result with folder selection
                                                                                            $scope.showSResult = 'slds-hide';
                                                                                            $scope.showAAResult = 'slds-show';
                                                                                        }else if(IsTwoMatch==false){
                                                                                                
                                                                                            // ** Temporary code to require manual folder selection for all ICBS accounts.
                                                                                            // ** Commented code works as the auto folder selection but removed since not yet tested.
                                                                                            
                                                                                            // Hide search result and show account result with folder selection
                                                                                            $scope.showSResult = 'slds-hide';
                                                                                            $scope.showAAResult = 'slds-show'; 
                                                                                           
                                                                                            // Hide modal and assign involve party 
                                                                                            // with latest open date to all accounts
                                                                                            
                                                                                            /*
                                                                                            var mainOpenDate = null;
                                                                                            var winningAcc = null;
                                                                                            
                                                                                            
                                                                                            for(aIP in aaIIList){
                                                                                                if($scope.applicantAccMap.get(aaIIList[aIP].Applicant_Account__c)!=null){
                                                                                                    console.log('AA Date Value!' +  $scope.applicantAccMap.get(aaIIList[aIP].Applicant_Account__c).Account_Open_Date__c);
                                                                                                    //2015-11-12T00:00:00.000+0000
                                                                                                    
                                                                                                    var javaScriptDate = new Date($scope.applicantAccMap.get(aaIIList[aIP].Applicant_Account__c).Account_Open_Date__c) ;
                                                                                                    console.log('javascript date:' + javaScriptDate);
                                                                                                    
                                                                                                    if(mainOpenDate == null){
                                                                                                        mainOpenDate = javaScriptDate;
                                                                                                        winningAcc = $scope.applicantAccMap.get(aaIIList[aIP].Applicant_Account__c);
                                                                                                    }else{
                                                                                                        if(mainOpenDate<javaScriptDate){
                                                                                                         mainOpenDate = javaScriptDate;
                                                                                                         winningAcc = $scope.applicantAccMap.get(aaIIList[aIP].Applicant_Account__c);
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                
                                                                                            }
                                                                                            
                                                                                            // Pull involve party
                                                                                            var ipList = $scope.involvePartyMap.get(winningAcc.Id);

                                                                                            // Updated by: Adrian Recio
                                                                                            // Description: Added code snippet below to perform full name validation in customer folder.
                                                                                            //              Full name should contain first and last name based on personal details specified for current applicant.
                                                                                            // Date: 21/1/2016

                                                                                            // full name match flag
                                                                                            var fullNameMatch = false;

                                                                                            // validate that involve party fullname is valid
                                                                                            if($scope.tabFlip == true){
                                                                                                var fName1 = document.getElementById('app1_first_name__c').value;
                                                                                                var lName1 = document.getElementById('app1_last_name__c').value;

                                                                                                if(ipList[0].Full_Name__c.indexOf(fName1) != -1 &&
                                                                                                   ipList[0].Full_Name__c.indexOf(lName1) != -1){
                                                                                                    fullNameMatch = true;
                                                                                                }
                                                                                            }else if($scope.tabFlip == false){
                                                                                                var fName2 = document.getElementById('app2_first_name__c').value;
                                                                                                var lName2 = document.getElementById('app2_last_name__c').value;

                                                                                                if(ipList[0].Full_Name__c.indexOf(fName2) != -1 &&
                                                                                                   ipList[0].Full_Name__c.indexOf(lName2) != -1){
                                                                                                    fullNameMatch = true;
                                                                                                }
                                                                                            }
                                                                                        
                                                                                            console.log('Full Name Result:' + fullNameMatch);

                                                                                            // Fire auto folder selection if full 
                                                                                            // name and open date is valid 
                                                                                            if(fullNameMatch==true){
                                                                                                // Define folder selection
                                                                                                if($scope.tabFlip == true){
                                                                                                    $scope.appAccCust = {};
                                                                                                    $scope.appAccCust.Account_Number__c = winningAcc.Account_Number__c;
                                                                                                    $scope.appAccCust.Customer_Number__c = ipList[0].Customer_Identifier__c;
                                                                                                    $scope.appAccCust.solicitFlag__c = ipList[0].SolicitFlag__c;
                                                                                                    $scope.appAccCust.Applicant__c = 'Applicant 1';
                                                                                                }else if($scope.tabFlip == false){
                                                                                                    $scope.appAccCust2 = {};
                                                                                                    $scope.appAccCust2.Account_Number__c = winningAcc.Account_Number__c;
                                                                                                    $scope.appAccCust2.Customer_Number__c = ipList[0].Customer_Identifier__c;
                                                                                                    $scope.appAccCust2.solicitFlag__c = ipList[0].SolicitFlag__c;
                                                                                                    $scope.appAccCust2.Applicant__c = 'Applicant 2';
                                                                                                }
                                                                                            
                                                                                                console.log('Applicant Account 1 Customer:' + JSON.stringify($scope.appAccCust));
                                                                                                console.log('Applicant Account 2 Customer:' + JSON.stringify($scope.appAccCust2));
                                                                                                
                                                                                                if( $scope.tabFlip == true){
                                                                                                    $scope.app1SValidated = true;
                                                                                                }else  if($scope.tabFlip == false){
                                                                                                    $scope.app2SValidated = true;
                                                                                                }
                                                                                             
                                                                                                $('#sModal').modal('hide');
                                                                                            // Require folder selection if full name or open date is invalid
                                                                                            }else{
                                                                                                $scope.showSResult = 'slds-hide';
                                                                                                $scope.showAAResult = 'slds-show';
                                                                                            }
                                                                                            */
                                                                                        }
                                                                                      
                                                                                        // Enable select CLV button
                                                                                        $scope.disableCLVButton = false;
                                                                                        
                                                                                        // Apply call is necessary if scope update is inside an asyn call
                                                                                        $scope.$apply();
                                                                                    },{escape: true});
                
           // If there is no ICBS Account, hide modal and tag 
           // that search and match is completed for the current applicant
           }else{
                if( $scope.tabFlip == true){
                    $scope.appAccCust = {};
                    $scope.app1SValidated = true;
                }else  if($scope.tabFlip == false){
                    $scope.appAccCust2 = {};
                    $scope.app2SValidated = true;
                }
               
                // Enable select CLV button
                $scope.disableCLVButton = false;
               
                $('#sModal').modal('hide');
               
               console.log('Applicant Account 1 Customer:' + JSON.stringify($scope.appAccCust));
               console.log('Applicant Account 2 Customer:' + JSON.stringify($scope.appAccCust2));
           }
        }// End Populate Debts

        // Duplicate Account checker
        // This method realigns and removes duplicates debts if
        // both applicant 1 and 2 contains the same account
        $scope.tagDuplicateDebt = function(){
            // Flush debt duplicate and reevaluate            
            for(debtVar in $scope.debtsList){
                $scope.debtsList[debtVar].duplicateDebt = false;
            }
            for(debtVar in $scope.debtsList2){
                $scope.debtsList2[debtVar].duplicateDebt = false;
            }
            
            for(debtVar1 in $scope.debtsList){
                for(debtVar2 in $scope.debtsList2){
                    var app1AccVar = $scope.applicantAccMap.get($scope.debtsList[debtVar1].Applicant_Account__c);
                    var app2AccVar = $scope.applicantAccMap.get($scope.debtsList2[debtVar2].Applicant_Account__c);
                    if(app1AccVar!=null && app2AccVar!=null){
                        if(app1AccVar.Account_Number__c!=''&&app2AccVar.Account_Number__c!=''&&
                           app1AccVar.Account_Number__c!=null&&app2AccVar.Account_Number__c!=null){
                            if(app1AccVar.Account_Number__c == app2AccVar.Account_Number__c){
                                $scope.debtsList[debtVar1].hasOtherDup = true;
                                $scope.debtsList2[debtVar2].duplicateDebt = true;
                                
                                if($scope.debtsList[debtVar1].RefinanceDebt == true){
                                    $scope.disburseMap[$scope.debtsList[debtVar1].Applicant_Account__c].Applicable_Party__c = 'Both'; 
                                }
                                
                                // Cancel Applicant 2 Refinance
                                if($scope.debtsList2[debtVar2].RefinanceDebt == true){
                                    $scope.debtsList[debtVar1].RefinanceDebt = true;
                                    
                                    var accTempApp2 = angular.copy($scope.applicantAccMapTemp.get($scope.debtsList2[debtVar2].Applicant_Account__c));
                                    accTempApp2.ApplicantType = 'Applicant 1';
                                    
                                    $scope.applicantAccMapTemp.set($scope.debtsList[debtVar1].Applicant_Account__c, accTempApp2);
                                    
                                    $scope.disburseMap[$scope.debtsList2[debtVar2].Applicant_Account__c].Applicable_Party__c = 'Both'; 
                                    $scope.disburseMap[$scope.debtsList2[debtVar2].Applicant_Account__c].ApplicantType = 'Applicant 1'; 
                                    $scope.refLoanMap[$scope.debtsList2[debtVar2].Applicant_Account__c].ApplicantType = 'Applicant 1'; 
                                    $scope.disburseMap[$scope.debtsList[debtVar1].Applicant_Account__c] = $scope.disburseMap[$scope.debtsList2[debtVar2].Applicant_Account__c];
                                    $scope.refLoanMap[$scope.debtsList[debtVar1].Applicant_Account__c] = $scope.refLoanMap[$scope.debtsList2[debtVar2].Applicant_Account__c];
                                    
                                    $scope.debtsList2[debtVar2].RefinanceDebt = false;
                                    delete $scope.disburseMap[$scope.debtsList2[debtVar2].Applicant_Account__c];
                                    delete $scope.refLoanMap[$scope.debtsList2[debtVar2].Applicant_Account__c];
                                }
                            }
                        }
                    }
                }
            }
        }
        
        // Main folder selection method
        $scope.processFolder = function(){
            var hasFolderSelected = false;
            
            // Validate that folder is selected
            if( $scope.tabFlip == true){    
                hasFolderSelected = $scope.defineFolderSelection(1);
            }else if($scope.tabFlip == false){
                hasFolderSelected = $scope.defineFolderSelection(2);
            }
            
            // Set validation complete boolean
            if( $scope.tabFlip == true && hasFolderSelected){   
                $scope.app1SValidated = true;
            }else  if($scope.tabFlip == false && hasFolderSelected){
                $scope.app2SValidated = true;
            }
            
            console.log('Applicant Account 1 Customer:' + JSON.stringify($scope.appAccCust));
            console.log('Applicant Account 2 Customer:' + JSON.stringify($scope.appAccCust2));
        }   
        
        // Core folder selection logic method
        $scope.defineFolderSelection = function(applicantFlag){
            var hasFolderSelected = false;
            var applicantCheck = '';                                                   
            if(applicantFlag==1){
                applicantCheck = 'Applicant 1';
            }else if(applicantFlag==2){
                applicantCheck = 'Applicant 2';
            }
            
            for(aaVar in $scope.applicantAccList){
                console.log('applicant check:' + applicantCheck);
                console.log('applicant type:' + $scope.applicantAccList[aaVar].ApplicantType);
                if(applicantCheck==$scope.applicantAccList[aaVar].ApplicantType){
                    
                    var ipList = $scope.involvePartyMap.get($scope.applicantAccList[aaVar].Id);
                    console.log('IP JSON:' + JSON.stringify(ipList));
                    if(ipList!=null){
                        if(ipList.length>0){
                            for(ipVar in ipList){
                                console.log('involve party:' + ipList[ipVar].involvePartySelected);
                                if(ipList[ipVar].involvePartySelected == true){
                                    if(applicantFlag==1){
                                        $scope.appAccCust = {};
                                        $scope.appAccCust.Applicant__c = applicantCheck;
                                        $scope.appAccCust.Account_Number__c = $scope.applicantAccList[aaVar].Account_Number__c;
                                        $scope.appAccCust.Customer_Number__c = ipList[ipVar].Customer_Identifier__c;
                                        $scope.appAccCust.solicitFlag__c = ipList[ipVar].SolicitFlag__c;
                                        hasFolderSelected = true;
                                    }else if(applicantFlag==2){
                                        $scope.appAccCust2 = {};
                                        $scope.appAccCust2.Applicant__c = applicantCheck;
                                        $scope.appAccCust2.Account_Number__c = $scope.applicantAccList[aaVar].Account_Number__c;
                                        $scope.appAccCust2.Customer_Number__c = ipList[ipVar].Customer_Identifier__c;
                                        $scope.appAccCust2.solicitFlag__c = ipList[ipVar].SolicitFlag__c;
                                        hasFolderSelected = true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
            
            return hasFolderSelected;
        }

        // Net payoff quote calculator used for refinance
        $scope.calculateNetValue = function(aaResultVar){
            var netPayOff = 0;
                    
            if(aaResultVar.Retrieved_Payoff_Amount__c==null ){
                if(aaResultVar.RPQ_Principal_Amount__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Principal_Amount__c);
                }
                if(aaResultVar.RPQ_Interest_Due__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Interest_Due__c);
                }
                if(aaResultVar.RPQ_Late_Fees_Due__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Late_Fees_Due__c);
                }
                if(aaResultVar.RPQ_Penalty_Interest_Due__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Penalty_Interest_Due__c);
                }
                if(aaResultVar.RPQ_Fees_or_Charges_Due__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Fees_or_Charges_Due__c);
                }
                if(aaResultVar.RPQ_Charge_Off_Amount__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Charge_Off_Amount__c);
                }
                if(aaResultVar.RPQ_Insurance_Rebate__c != ''){
                    netPayOff -= parseFloat(aaResultVar.RPQ_Insurance_Rebate__c);
                }
                if(aaResultVar.RPQ_Early_Termination_Fee__c != ''){
                    netPayOff += parseFloat(aaResultVar.RPQ_Early_Termination_Fee__c);
                }
            }else{
                netPayOff += parseFloat(aaResultVar.Retrieved_Payoff_Amount__c);
            }
            
            return netPayOff;
        }
        
        // Core payoff quote calculator when payoff quote is edited
        $scope.recalculatePayOff = function(){
            var parentAppAcc = $scope.applicantAccMapTemp.get($scope.loanAppAcc);
            var linkDisburse = $scope.disburseMap[parentAppAcc.Id];
            var linkLoan = $scope.refLoanMap[parentAppAcc.Id];
            var netPayOff = 0;

            var rpqPA = 0;
            var rpqID = 0;
            var rpqLFD = 0;
            var rpqPID = 0;
            var rpqFC = 0;
            var rpqCOA = 0;
            var rpqIR = 0;
            var rpqETF = 0;

            var rpqRPA = 0;
            var rpqIRate = 0;
            
            if(parentAppAcc.RPQ_Principal_Amount__c!='' && parentAppAcc.RPQ_Principal_Amount__c!=null){
                rpqPA = parentAppAcc.RPQ_Principal_Amount__c;
            }
            if(parentAppAcc.RPQ_Interest_Due__c!='' && parentAppAcc.RPQ_Interest_Due__c!=null){
                rpqID = parentAppAcc.RPQ_Interest_Due__c;
            }
            if(parentAppAcc.RPQ_Late_Fees_Due__c!='' && parentAppAcc.RPQ_Late_Fees_Due__c!=null){
                rpqLFD = parentAppAcc.RPQ_Late_Fees_Due__c;
            }
            if(parentAppAcc.RPQ_Penalty_Interest_Due__c!='' && parentAppAcc.RPQ_Penalty_Interest_Due__c!=null){
                rpqPID = parentAppAcc.RPQ_Penalty_Interest_Due__c
            }
            if(parentAppAcc.RPQ_Fees_or_Charges_Due__c!='' && parentAppAcc.RPQ_Fees_or_Charges_Due__c!=null){
                rpqFC = parentAppAcc.RPQ_Fees_or_Charges_Due__c;
            }
            
            if(parentAppAcc.RPQ_Charge_Off_Amount__c!='' && parentAppAcc.RPQ_Charge_Off_Amount__c!=null){
                rpqCOA = parentAppAcc.RPQ_Charge_Off_Amount__c;
            }
            if(parentAppAcc.RPQ_Insurance_Rebate__c!='' && parentAppAcc.RPQ_Insurance_Rebate__c!=null){
                rpqIR = parentAppAcc.RPQ_Insurance_Rebate__c;
            }
            if(parentAppAcc.RPQ_Early_Termination_Fee__c!='' && parentAppAcc.RPQ_Early_Termination_Fee__c!=null){
                rpqETF = parentAppAcc.RPQ_Early_Termination_Fee__c;
            }

            
            
            if(parentAppAcc.Retrieved_Payoff_Amount__c!='' && parentAppAcc.Retrieved_Payoff_Amount__c!=null){
                rpqRPA = parentAppAcc.Retrieved_Payoff_Amount__c;
            }

            if(parentAppAcc.RPQ_Interest_Rate__c!='' && parentAppAcc.RPQ_Interest_Rate__c!=null){
                rpqIRate = parentAppAcc.RPQ_Interest_Rate__c;
            }

            // Setting retrieved payoff will allow recalculation 
            rpqRPA = 0;

            linkDisburse.Principal_Amount__c = rpqPA;
            linkDisburse.Interest_Due__c = rpqID;
            linkDisburse.Late_Fees_Due__c = rpqLFD;
            linkDisburse.Penalty_Interest_Due__c = rpqPID;
            linkDisburse.Fees_or_Charges_Due__c = rpqFC;
            linkDisburse.Charge_Off_Amount__c = rpqCOA;
            linkDisburse.Insurance_Rebate__c = rpqIR;
            linkDisburse.Early_Termination_Fee__c = rpqETF;

            linkDisburse.Interest_Rate__c = rpqIRate; 
            
            if(rpqRPA==0){
                    netPayOff += parseFloat(rpqPA);  
                    netPayOff += parseFloat(rpqID);
                    netPayOff += parseFloat(rpqLFD); 
                    netPayOff += parseFloat(rpqPID);
                    netPayOff += parseFloat(rpqFC);
                    netPayOff += parseFloat(rpqCOA);
                    netPayOff -= parseFloat(rpqIR);
                    netPayOff += parseFloat(rpqETF);
            }else{
                netPayOff += parseFloat(rpqRPA);
            }
             
            linkDisburse.netPayOff = netPayOff;
            linkLoan.Loan_Amount__c = netPayOff;
            $scope.disburseMap[parentAppAcc.Id] = linkDisburse;
            $scope.refLoanMap[parentAppAcc.Id] = linkLoan;
            
            addRefinance();
            
            return linkLoan.netPayOff;
        }

        // Core refinance method that populates loan and disbursement
        $scope.recalculateRefinance = function(debtVal){
            /*
            $scope.disburseMap = new Map();
            $scope.refLoanMap = new Map();
            */
               var aaResultVar = $scope.applicantAccMap.get(debtVal.Applicant_Account__c);
               console.log('Payoff Amount Temp:' + $scope.applicantAccMapTemp.get(debtVal.Applicant_Account__c).Retrieved_Payoff_Amount__c);
               console.log('Payoff Amount Orig:' + $scope.applicantAccMap.get(debtVal.Applicant_Account__c).Retrieved_Payoff_Amount__c);
            
                if(debtVal.RefinanceDebt == true){
                    
                    // Calculate net payoff
                    var netPayOff = $scope.calculateNetValue(aaResultVar);
                    
                    if(netPayOff=='' || netPayOff==null){
                        netPayOff = 0;
                    }

                    console.log('final net payoff:' + netPayOff);
                    
                    var disburseVar = {};
                    var country = '{!JSENCODE($CurrentPage.parameters.country)}';
                    
                    //Populate Account Number and Payee
                    if(country == 'AU'){
                        //BEGIN MLASALA: 22-MAR-16 TQLQW-127 Re-brand - Internal and Operational References in Salesforce
                        disburseVar.Payee__c = '{!$Setup.Application_Wizard_Settings__c.Global_Brand__c}';
                        disburseVar.Bank_Acc_No__c =  aaResultVar.Account_Number__c;
                    }else if(country == 'NZ'){
                        disburseVar.Payee__c = '{!$Setup.Application_Wizard_Settings__c.Global_Brand__c} PL'; 
                        //END MLASALA: 22-MAR-16 TQLQW-127 Re-brand - Internal and Operational References in Salesforce
                        disburseVar.Bank_Acc_No_NZ__c = aaResultVar.Account_Number__c;
                    }
                    
                    // Assign based on current applicant
                    // Applicable Party - Applicant 1 or 2
                    if(debtVal.hasOtherDup==true){
                        disburseVar.Applicable_Party__c = 'Both'; 
                    }else{
                        disburseVar.Applicable_Party__c = debtVal.ApplicantType; 
                    }
                    
                    disburseVar.Interest_Rate__c = aaResultVar.RPQ_Interest_Rate__c; // Interest Rate
                    disburseVar.Disbursement_Account_Type__c = 'Personal Loan'; // Disbursement Account Type
                    disburseVar.Disbursement_Outcome__c = 'Close'; // Disbursement Outcome
                    

                    // Payout Effective Date
                    disburseVar.Payout_Effective_Date__c = new Date();
                    
                    disburseVar.Principal_Amount__c = aaResultVar.RPQ_Principal_Amount__c; // Principal Amount
                    disburseVar.Interest_Due__c = aaResultVar.RPQ_Interest_Due__c; // Interest Due
                    disburseVar.Late_Fees_Due__c = aaResultVar.RPQ_Late_Fees_Due__c; // Late Fees Due
                    disburseVar.Penalty_Interest_Due__c = aaResultVar.RPQ_Penalty_Interest_Due__c; // Penalty Interest Due
                    disburseVar.Fees_or_Charges_Due__c = aaResultVar.RPQ_Fees_or_Charges_Due__c; // Fees or Charges Dues
                    disburseVar.Charge_Off_Amount__c = aaResultVar.RPQ_Charge_Off_Amount__c; // Charge Off Amount
                    disburseVar.Insurance_Rebate__c = aaResultVar.RPQ_Insurance_Rebate__c; // Insurance Rebate
                    disburseVar.Early_Termination_Fee__c = aaResultVar.RPQ_Early_Termination_Fee__c; // Early Termination Fee
                    disburseVar.netPayOff = netPayOff; // disburseVar.Net Payoff Amount = Retrieved_Payoff_Amount__c // Need calculation
                    disburseVar.Applicant_Account__c = aaResultVar.Id; // Set Disbursement Applicant Account
                    disburseVar.ApplicantType = debtVal.ApplicantType; // Applicant Type
                    $scope.disburseMap[aaResultVar.Id] = disburseVar; // Commit in the disbursement map

                    var loanVar = {};
                    loanVar.Value__c = 'Refinance'; 
                    loanVar.Loan_Amount__c = netPayOff; // Assign net payoff
                    loanVar.Applicant_Account__c = aaResultVar.Id // Set Loan Applicant Account
                    loanVar.ApplicantType = debtVal.ApplicantType; // Applicant Type
                    $scope.refLoanMap[aaResultVar.Id] = loanVar; // Commit in the loan map
                }else{
                    //console.log('aa delete success:' + $scope.disburseMap.delete(aaResultVar.Id));
                    //console.log('loan delete success:' + $scope.refLoanMap.delete(aaResultVar.Id));
                    delete $scope.disburseMap[aaResultVar.Id];
                    delete $scope.refLoanMap[aaResultVar.Id];
                    $scope.applicantAccMapTemp.set(angular.copy(aaResultVar.Id), angular.copy(aaResultVar) );
                }

            addRefinance();
            
            console.log(JSON.stringify($scope.disburseMap));
            console.log(JSON.stringify($scope.refLoanMap));
        }

        $scope.app2SearchShow = false; // Show search tab for applicant to based on application type
        
        // Main search and match result modal pop up method
        $scope.openSearchModal = function(appCount){
            $scope.showSResult = 'slds-show';
            $scope.showAAResult = 'slds-hide';
            if(appCount==1){ // Applicant 1
                $scope.tabFlip = true;
                // Roll back from CLV template value before display if applicant 1 is already validated
                if($scope.app1SValidated==true){
                    // Create Deep Copy of CLV App 1 from template to original clv list
                    for(acI in $scope.searchResultsFinal){   
                        for(acIOrig in $scope.searchResults){
                            if($scope.searchResults[acIOrig].Id == $scope.searchResultsFinal[acI].Id){
                                $scope.searchResults[acIOrig].User_Match_Flag__c = $scope.searchResultsFinal[acI].User_Match_Flag__c;
                            }
                        }
                    }
                }
            }else if(appCount==2){  // Applicant 2
                $scope.tabFlip = false;
                // Roll back from CLV template value before display if applicant 2 is already validated
                if($scope.app2SValidated==true){
                    // Create Deep Copy of CLV App 1 from template to original clv list
                    for(acI in $scope.searchResultsFinal2){   
                        for(acIOrig in $scope.searchResults2){
                            if($scope.searchResults2[acIOrig].Id == $scope.searchResultsFinal2[acI].Id){
                                $scope.searchResults2[acIOrig].User_Match_Flag__c = $scope.searchResultsFinal2[acI].User_Match_Flag__c;
                            }
                        }
                    }
                }
            }
            
            // Reset tab visibility
            var appType = $('#app_Application_Type__c').val();
            if(appType=='Joint'){
                 $scope.app2SearchShow = true;
            }else{
                $scope.app2SearchShow = false;
            }
            
            $('#sModal').modal('show');
        }
        
        // Resets state of result to show search a result and hides folder selection
        $scope.returnSearchModal = function(){
            $scope.showSResult = 'slds-show';
            $scope.showAAResult = 'slds-hide';
        }
        
        // Ensures that only one folder is by user
        $scope.unSelectOtherFolder = function(currIP){

            for(aaVar in $scope.applicantAccList){
                var involvePartyMain = new Map();
            
                console.log('Folder Account:' + JSON.stringify($scope.applicantAccList[aaVar]));
                
                if($scope.applicantAccList[aaVar]!=null){
                    if($scope.applicantAccList[aaVar].ApplicantType == 'Applicant 1' && $scope.tabFlip==true){  
                        involvePartyMain = $scope.involvePartyMap.get($scope.applicantAccList[aaVar].Id);
                    }else if($scope.applicantAccList[aaVar].ApplicantType == 'Applicant 2' && $scope.tabFlip==false){
                        involvePartyMain = $scope.involvePartyMap.get($scope.applicantAccList[aaVar].Id);
                    }
                    for(aIPVar in involvePartyMain){
                        console.log('IP Key:' + aIPVar);
                        if(involvePartyMain[aIPVar]!=null){
                            if(involvePartyMain[aIPVar].Id!=currIP.Id){
                                involvePartyMain[aIPVar].involvePartySelected = false;
                            }
                        }
                    }
                }
            }
        }
        
        // Child clv selector. Fires when parent is selected
        $scope.selectChildCLV = function(appType,parentCLV){
            var clvSelectionList;
            
            if(appType==1){
                clvSelectionList = $scope.searchResults;
            }else if(appType==2){
                clvSelectionList = $scope.searchResults2;
            }
            
            for (var i = 0; i < clvSelectionList.length; i++) {
                if(clvSelectionList[i]!=null){
                    if(clvSelectionList[i].CLV__c == parentCLV.CLV__c){
                        clvSelectionList[i].User_Match_Flag__c = parentCLV.User_Match_Flag__c;
                    }
                }
            }
        }
        // pulls date today for display
        $scope.pullDateToday = function(){
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth()+1; //January is 0!
        
            var yyyy = today.getFullYear();
            if(dd<10){
                dd='0'+dd;
            } 
            if(mm<10){
                mm='0'+mm;
            } 
            var today = dd+'/'+mm+'/'+yyyy;
            return today;
        }
        
    });  // End Search and Match Angular Controller

            // Core method that returns a map of search and match values that should be committed on save and submit
            function pullSearchAndMatchInfo(){
                var scope = angular.element($("#mainSM")).scope();  

                // Build Search Data
                var searchMap1 = new Map();
                searchMap1.set('Applicant_CLV__c',scope.searchResultsFinal); // Applicant_CLV__c List - Update 
                searchMap1.set('Liability__c',scope.debtsList); // Liability__c List - Insert
                searchMap1.set('Applicant_Account_Customer__c',scope.appAccCust); // Applicant_Account_Customer__c List - Insert
                
                console.log('Applicant 1 Save Value--------------------------------------------------');
                console.log('Applicant_CLV__c:' + JSON.stringify(searchMap1.get('Applicant_CLV__c')));
                console.log('Liability__c:' + JSON.stringify(searchMap1.get('Liability__c')));
                console.log('Applicant_Account_Customer__c:' + JSON.stringify(searchMap1.get('Applicant_Account_Customer__c'))); 
                
                var searchMap2 = new Map();
                searchMap2.set('Applicant_CLV__c',scope.searchResultsFinal2); // Applicant_CLV__c List - Update
                searchMap2.set('Liability__c',scope.debtsList2); // Liability__c List - Insert
                searchMap2.set('Applicant_Account_Customer__c',scope.appAccCust2); // Applicant_Account_Customer__c List - Insert
                
                console.log('Applicant 2 Save Value--------------------------------------------------');
                console.log('Applicant_CLV__c:' + JSON.stringify(searchMap2.get('Applicant_CLV__c')));
                console.log('Liability__c:' + JSON.stringify(searchMap2.get('Liability__c')));
                console.log('Applicant_Account_Customer__c:' + JSON.stringify(searchMap2.get('Applicant_Account_Customer__c'))); 
                
                var applicationMap = new Map();
                applicationMap.set('Disbursement__c',scope.disburseMap); // Disbursement__c Map - (key, val) in Map - val.field - Insert
                applicationMap.set('Loan_Purpose__c',scope.refLoanMap); // Loan_Purpose__c Map - Insert
                
                var loanAmountTotal = 0;
                // Pull Loan Amount Total for refinance
              
                for(key in scope.refLoanMap){
                    if(scope.refLoanMap[key].Loan_Amount__c!=null){
                        loanAmountTotal = loanAmountTotal + scope.refLoanMap[key].Loan_Amount__c;
                    }
                }
                    
                applicationMap.set('Loan_Amount_Total',loanAmountTotal);
               
                console.log('Application--------------------------------------------------');
                console.log('Loan Amount Total:' + applicationMap.get('Loan_Amount_Total'));
                console.log('Disbursement__c:' + JSON.stringify(applicationMap.get('Disbursement__c')) );
                console.log('Loan_Purpose__c:' + JSON.stringify(applicationMap.get('Loan_Purpose__c')) );
                
                // Build Applicant Map
                var applicantMap = new Map();
                applicantMap.set('Applicant_1', searchMap1);          
                applicantMap.set('Applicant_2', searchMap2); 
                applicantMap.set('Application', applicationMap); 
              
                // Applicant update logic
                // applicant.ICBS_Account_Number__c = Applicant_Account_Customer__c.Account_Number__c;
                // applicant.ICBS_Customer_Number__c = Applicant_Account_Customer__c.Selected_ICBS_Customer_Number__c;
                
                return applicantMap;
            }
    
            // Search and match completed validator method
            function validateSearchAndMatch(){
                
                var appType = $('#app_Application_Type__c');
                var IsJointType = false;
                
                if(appType.val() == 'Joint'){
                    IsJointType = true;
                }
              
                var scope = angular.element($("#mainSM")).scope();
                var app1IsValidated = false;
                var app2IsValidated = false;
                if(scope.app1SValidated == true){
                    app1IsValidated = true;
                }
                
                if(scope.app2SValidated == true){
                    app2IsValidated = true;
                }
                
                return searchValidationError(app1IsValidated,app2IsValidated, IsJointType);
            }
    
            // Search and match validation messaging helper method
            function searchValidationError(app1S,app2S,IsJointType){
                
                console.log('date value:' + new Date());
                console.log('App 1 Validation State:' + app1S);
                console.log('App 2 Validation State:' + app2S);
                console.log('Joint Type:' + IsJointType);
                
                // Applicant 1 and 2 not validated and selection is confirmed joint
                if(app1S==false && (app2S==false && IsJointType == true)){
                    displaySErrorMessage(true, 'Please Complete CLV Search for Applicant 1 and 2');
                    return false;
                // Applicant 1 and 2 not validated and selection is not confirmed joint
                }else if(app1S==false && (app2S==false && IsJointType == false)){
                    displaySErrorMessage(true, 'Please Complete CLV Search for Applicant 1');
                    return false;
                // Applicant 1 not validated and applicant 2 validated and selection not confirmed joint - Special applicant 2 scenario
                }else if(app1S==false && (app2S==true && IsJointType == false)){
                    displaySErrorMessage(true, 'Please Complete CLV Search for Applicant 1');
                    return false;
                // Applicant 1 not validated and applicant 2 validated and selection is confirmed joint - normal applicant 2 scenario
                }else if(app1S==false && (app2S==true && IsJointType == true)){
                    displaySErrorMessage(true, 'Please Complete CLV Search for Applicant 1');
                    return false;
                // Applicant 1 validated and applicant 2 not validated and selection is confirmed joint
                }else if(app1S==true && (app2S==false && IsJointType == true)){
                    displaySErrorMessage(true, 'Please Complete CLV Search for Applicant 2');
                    return false;
                }
                
                displaySErrorMessage(false, '');
                
                return true;
            }
    
            // Search and match error message initializer
            function displaySErrorMessage(setType, msgStr){
                var scope = angular.element($("#mainSM")).scope();
                scope.sMatchError = setType;
                scope.sMatchErrorErr = msgStr;
                scope.$apply();
                $('#sMatchId').collapse('show');
            }
    
            // Core method that flushes all search and match related values for applicant 1.
            // This method basically resets everything from the start for applicant 1 search.
            function resetSearch1(){
                var scope = angular.element($("#mainSM")).scope();
                
                scope.searchMap = new Map(); // CLV result map
  
                // Enable duplicate in applicant 2
                for(debtVar in scope.debtsList2){
                    scope.debtsList2[debtVar].duplicateDebt = false;
                }
                
                scope.sMatchError = false;
                scope.sMatchErrorErr = '';
                
                scope.appMsg1 = '';
                scope.app1Status = 'slds-hide';
                scope.app1Spinner = 'slds-hide';
                
                scope.app1MResult = 'slds-hide';
                scope.searchResults=[];
                
                scope.clvCountApp1 = new Map();
                
                
                clearTimeout(user1Timeout);
                
                scope.topCLVScoreMap = new Map();
                scope.topCLVDupMap = new Map();
                scope.CLVhasAccount = new Map();
                
                scope.hasMatchCLV1 = new Map();
                
                scope.resultCount1 = 0;
                scope.resultCountAcc1 = 0;
                
                scope.hasAccError1 = false;
                scope.noMatchAcc1 = false;
                scope.hostAccFail1 = false;
   
                scope.app1SValidated = false;
                
                scope.debtsList = [];
                
                // Disable streaming here!
                searchInfo1 = '';
                
                // Clear Disbursement
                for(key in scope.disburseMap){
                    if(scope.disburseMap[key].ApplicantType=='Applicant 1'){
                        delete scope.disburseMap[key];
                    }
                }
                
                // Clear Loan
                for(key in scope.refLoanMap){
                    if(scope.refLoanMap[key].ApplicantType=='Applicant 1'){
                        delete scope.refLoanMap[key];
                    }
                }
                
                scope.appAccCust = {};
                
                scope.$apply();
                
                // Refresh Loan Amount Total
                addRefinance();
                
                // Refresh Debt Total
                calculateGEDebts();
                
            }
    
            // Core method that flushes all search and match related values for applicant 2.
            // This method basically resets everything from the start for applicant 2 search.
            function resetSearch2(){
                var scope = angular.element($("#mainSM")).scope();
                
                scope.searchMap2 = new Map(); // CLV result map

                // Remove has dup tag in applicant 1
                for(debtVar in scope.debtsList){
                    scope.debtsList[debtVar].hasOtherDup = false;
                }
                
                // Roll back applicant 1 involve party set to both
                for(key in scope.disburseMap){
                    if(scope.disburseMap[key].ApplicantType=='Applicant 1'){
                        scope.disburseMap[key].Applicable_Party__c = 'Applicant 1';
                    }
                }
                
                scope.sMatchError = false;
                scope.sMatchErrorErr = '';
                
                scope.appMsg2 = '';
                scope.app2Status = 'slds-hide';
                scope.app2Spinner = 'slds-hide';
                
                scope.app2MResult = 'slds-hide';
                scope.searchResults2=[];
                
                scope.clvCountApp2 = new Map();
                
                clearTimeout(user2Timeout);
                
                scope.topCLVScoreMap2 = new Map();
                scope.topCLVDupMap2 = new Map();
                scope.CLVhasAccount2 = new Map();
                
                scope.hasMatchCLV2 = new Map();
                
                scope.resultCount2 = 0;
                scope.resultCountAcc2 = 0;
                
                scope.hasAccError2 = false;
                scope.noMatchAcc2 = false;
                scope.hostAccFail2 = false;
                
                scope.app2SValidated = false;
                
                scope.debtsList2 = [];
                
                // Disable streaming here!
                searchInfo2 = '';
                
                // Clear Disbursement
                for(key in scope.disburseMap){
                    if(scope.disburseMap[key].ApplicantType=='Applicant 2'){
                        delete scope.disburseMap[key];
                    }
                }
                
                // Clear Loan
                for(key in scope.refLoanMap){
                    if(scope.refLoanMap[key].ApplicantType=='Applicant 2'){
                        delete scope.refLoanMap[key];
                    }
                }
                
                scope.appAccCust2 = {};
                
                scope.$apply();
                
                // Refresh Loan Amount Total
                addRefinance();
                
                // Refresh Debt Total
                calculateGEDebts();
            }
    
            // Main method that fires on click of search button for applicant 1 or 2
            // This method flushes all values from previous search and performs salesforce related transactions
            // like creating applicant search and firing the search webservice exposed using an apex remote action.
            // After firing the search webservices, initiates the streaming for applicant 1 and 2 clv and account for display.
            function search(appliCount){
                //fNameId
                //lNameId
                //dBirthId
                //pCodeId
                //pPCodeId
                //mPhoneId
                //dLiId
                
                var countryVar = '{!JSENCODE($CurrentPage.parameters.country)}';
                
                var scope = angular.element($("#mainSM")).scope();  
                
                scope.sMatchError = false;
                scope.sMatchErrorErr = '';
                
                if(appliCount==1){
                    /*
                    clearTimeout(user1Timeout);
                    
                    scope.topCLVScoreMap = new Map();
                    scope.topCLVDupMap = new Map();
                    scope.CLVhasAccount = new Map();
                    
                    scope.resultCount1 = 0;
                    scope.app1SValidated = false;
                    */
                    
                    resetSearch1();
                    
                    scope.appMsg1 = 'Searching CLV for Applicant 1';
                    scope.app1Status = 'slds-show';
                    scope.app1Spinner ='slds-show';
                    scope.app1MResult = 'slds-hide';
                    scope.$apply();
                    
                    /*
                    var fNameId = document.getElementById('fNameId');
                    var lNameId = document.getElementById('lNameId');
                    var dBirthId = document.getElementById('dBirthId');
                    var pCodeId = document.getElementById('pCodeId');
                    var pPCodeId = document.getElementById('pPCodeId');
                    var mPhoneId = document.getElementById('mPhoneId');
                    var dLiId = document.getElementById('dLiId');
                    */
                                        
                    var fNameId = document.getElementById('app1_first_name__c');
                    var lNameId = document.getElementById('app1_last_name__c');
                    var dYear = document.getElementById('app1_dy');  
                    var dMonth = document.getElementById('app1_dob_months');
                    var dDay = document.getElementById('app1_dob_dd');
                    console.log('Syear:' + dYear.value);
                    console.log('Smonth:' + dMonth.value);
                    console.log('Sday:' + dDay.value);
                    var pCodeId = document.getElementById('app1_postcode_res__c');
                    
                    if(document.getElementById('app1_years_at_addr__c').value>2){
                        var pPCodeId = document.getElementById('app1_previousPostcode');
                    }else{
                        var pPCodeId = document.getElementById('app1_postcode_pre__c');
                    }
                    
                    var mPhoneId = document.getElementById('app1_mobile__c');

                    var dLiId = '';
                    if(countryVar=='NZ' && document.getElementById('app1_customer_id_type__c').value=='NZ Driver Licence'){
                        dLiId = document.getElementById('app1_id_number__c').value;
                    }else if(countryVar=='AU'){
                        dLiId = document.getElementById('app1_drivers_lic_no__c').value;
                    }
                    
                    var homePId = document.getElementById('app1_home__c');
                    var workPId = document.getElementById('app1_work__c');
                    var mNameId = document.getElementById('app1_middle_name__c');
                    
                }
                
                if(appliCount==2){
                    /*
                    clearTimeout(user2Timeout);
                    
                    scope.topCLVScoreMap2 = new Map();
                    scope.topCLVDupMap2 = new Map();
                    scope.CLVhasAccount2 = new Map();
                    
                    scope.resultCount2 = 0;
                    scope.app2SValidated = false;
                    */
                    
                    resetSearch2();
                    
                    scope.appMsg2 = 'Searching CLV for Applicant 2';
                    scope.app2Status = 'slds-show';
                    scope.app2Spinner = 'slds-show';
                    scope.app2MResult = 'slds-hide';
                    scope.$apply();
                    /*
                    var fNameId = document.getElementById('fNameId2');
                    var lNameId = document.getElementById('lNameId2');
                    var dBirthId = document.getElementById('dBirthId2');
                    var pCodeId = document.getElementById('pCodeId2');
                    var pPCodeId = document.getElementById('pPCodeId2');
                    var mPhoneId = document.getElementById('mPhoneId2');
                    var dLiId = document.getElementById('dLiId2');
                    */
                    
                    var fNameId = document.getElementById('app2_first_name__c');
                    var lNameId = document.getElementById('app2_last_name__c');
                    var dYear = document.getElementById('app2_dy');  
                    var dMonth = document.getElementById('app2_dob_months');
                    var dDay = document.getElementById('app2_dob_dd');
                    var pCodeId = document.getElementById('app2_postcode_res__c');
                    
                    if(document.getElementById('app2_years_at_addr__c').value>2){ 
                        var pPCodeId = document.getElementById('app2_previousPostcode');
                    }else{
                        var pPCodeId = document.getElementById('app2_postcode_pre__c');
                    }
                    
                    var pPCodeId = document.getElementById('app2_previousPostcode');
                    var mPhoneId = document.getElementById('app2_mobile__c');
                    
                    var dLiId = '';
                    if(countryVar=='NZ' && document.getElementById('app2_customer_id_type__c').value=='NZ Driver Licence'){
                        dLiId = document.getElementById('app2_id_number__c').value;
                    }else if(countryVar=='AU'){
                        dLiId = document.getElementById('app2_drivers_lic_no__c').value;
                    }
                    
                    var homePId = document.getElementById('app2_home__c');
                    var workPId = document.getElementById('app2_work__c');
                    var mNameId = document.getElementById('app2_middle_name__c');
                    
                    
                }
                
                var dBirth = '';
                if(dYear.value!='' && dMonth.value!='' && dDay.value!=''){
                    dBirth = dYear.value + '-' + dMonth.value + '-' + dDay.value;
                } 

                $('#sMatchId').collapse('show');
            
            console.log('date of birth:' + dBirth);
            console.log('firstname:' + fNameId.value);
            console.log('lastname:' + lNameId.value);
            console.log('mobilephone:' + mPhoneId.value);
            console.log('postcode:' + pCodeId.value);
            console.log('previous post code:' + pPCodeId.value);
            console.log('drivers license:' + dLiId);
            
            console.log('homephone:' + homePId.value);
            console.log('workphone:' + workPId.value);
            console.log('middlename:' + mNameId.value);
                
            var asDetails = { Date_of_Birth_WS__c: dBirth
                              ,Date_of_Birth__c: dBirth
                              ,First_Name__c: fNameId.value
                              ,Last_Name__c: lNameId.value
                              ,Mobile_Phone__c: mPhoneId.value
                              ,Post_Code__c: pCodeId.value
                              ,Previous_Postcode__c: pPCodeId.value
                              ,Drivers_License__c: dLiId
                             
                              ,Home_Phone__c:homePId.value
                              ,Work_Phone__c:workPId.value
                              ,Middle_Name__c:mNameId.value
                            };
                
                console.log('Search JSON:' + JSON.stringify(asDetails));

               Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.APP_Wizard_SearchAndMatch.searchApp}",asDetails,
                                                                    function(result, event){
                                                                        console.log("Type:" + event.type);
                                                                        console.log("Message:" + event.message);
                                                                        console.log("Status:" + event.status);
                                                                        console.log("Value:" + result);
                                                                        
                                                                        console.log('Mock Enabled:' + scope.mockEnable);
                                                                        
                                                                        if(appliCount==1){
                                                                            // Assign Applicant Search RecordId to the right applicant
                                                                            if(scope.mockEnable==true){
                                                                                searchInfo1 =  "{!appSearch1Id}";
                                                                            }else{
                                                                                searchInfo1 =  result;  
                                                                            }
                                                                        }else if(appliCount==2){
                                                                            // Assign Applicant Search RecordId to the right applicant
                                                                            if(scope.mockEnable==true){
                                                                                searchInfo2 =  "{!appSearch2Id}";
                                                                            }else{
                                                                                searchInfo2 =  result;  
                                                                            }
                                                                        }
                                                                        
                                                                        console.log('searchInfo1:' + searchInfo1);
                                                                        console.log('searchInfo2:' + searchInfo2);
                                                                        
                                                                        console.log('streaming connected:' + hasInitConnection);
                                                                        console.log('streaming subscribe:' + hasSubTopicAC);
                                                                        
                                                                        // Fire Streaming Connection ones
                                                                        if(hasInitConnection==false){
                                                                            hasInitConnection = true;
                                                                            connectToServer();
                                                                        }
                                                                        
                                                                        // Fire topic subscription
                                                                        if(hasSubTopicAC==false){
                                                                            hasSubTopicAC = true;
                                                                            subscribeToTopicAC();
                                                                            subscribeToTopicAA();
                                                                        }
                                                                        
                                                                        console.log('after streaming connected:' + hasInitConnection);
                                                                        console.log('after streaming subscribe:' + hasSubTopicAC);
                                                                        
                                                                       
                                                                            Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.APP_Wizard_SearchAndMatch.fireSearch}",result,
                                                                                                                        function(result, event){
                                                                                                                            console.log("Type:" + event.type);
                                                                                                                            console.log("Message:" + event.message);
                                                                                                                            console.log("Status:" + event.status);
                                                                                                                            console.log("Value:" + result);
                                                                                                                                
                                                                                                                            // Trigger Search Fail or Service Fail Here
                                                                                                                            // If there are no failures, trigger timeout
                                                                                                                            
                                                                                                                            if(appliCount==1){ 
                                                                                                                                appOneUserTimeout();
                                                                                                                            }
                                                                                                                            
                                                                                                                            if(appliCount==2){
                                                                                                                                appTwoUserTimeout();
                                                                                                                            }
                                                                                                                            
                                                                                                                            console.log('mock enabled:' + scope.mockEnable);
                                                                                                                            console.log('err NO CLV enabled:' + scope.errNoCLVEnable);
                                                                                                                            console.log('err Fail CLV enabled:' + scope.errFailCLVEnable);
                                                                                                                            console.log('err NO Acc enabled:' + scope.errNoAccEnable);
                                                                                                                            console.log('err Fail Acc enabled:' + scope.errFailAccEnable);
                                                                                                                            
                                                                                                                            if(scope.mockEnable==true){
                                                                                                                                
                                                                                                                                    Visualforce.remoting.Manager.invokeAction("{!$RemoteAction.APP_Wizard_SearchAndMatch.mockSearch}",appliCount,scope.errNoCLVEnable,scope.errFailCLVEnable,scope.errNoAccEnable, scope.errFailAccEnable,scope.errTimeoutEnable,searchInfo1,searchInfo2, 
                                                                                                                                          function(result, event){
                                                                                                                                              console.log("Type:" + event.type);
                                                                                                                                              console.log("Message:" + event.message);
                                                                                                                                              console.log("Status:" + event.status);
                                                                                                                                              console.log("Value:" + result);
                                                                                                                                              
                                                                                                                                          },{escape: true});
                                                                                                                              
                                                                                                                            }
                                                                                                                            
                                                                                                                        },{escape: true});
                                                                                 
                                                                    },{escape: true});
    
                                                                
                }// End Search
     
    // Core timeout function for applicant 1
    function appOneUserTimeout(){
        user1Timeout = setTimeout(function(){ 
                                    var tScope = angular.element($("#mainSM")).scope(); 
                                    //if(tScope.searchResults.length == 0){
                                    if(tScope.resultCountAcc1 == 0){
                                         resetSearch1();
                                         tScope.appMsg1 = 'Applicant 1 search timeout. Please try again.';
                                         tScope.app1Status = 'slds-show';
                                         tScope.app1Spinner = 'slds-hide';
                                         
                                         tScope.$apply();
                                        
                                         // Unsubscribe here but for now flush the search Id
                                         searchInfo1 = '';
                                         streamClear();
                                     }
                                     
                                     
                                 }, 90000);

    }

    // Core timeout function for applicant 2
    function appTwoUserTimeout(){
        user2Timeout = setTimeout(function(){  
                                    var tScope = angular.element($("#mainSM")).scope(); 
                                    //if(tScope.searchResults2.length == 0){
                                    if(tScope.resultCountAcc2 == 0){
                                         resetSearch2();
                                         tScope.appMsg2 = 'Applicant 2 search timeout. Please try again.';
                                         tScope.app2Status = 'slds-show';
                                         tScope.app2Spinner = 'slds-hide';
                                         
                                         tScope.$apply();
                                        
                                         // Unsubscribe here but for now flush the search Id
                                         searchInfo2 = '';
                                         streamClear();
                                     }
                                 }, 90000);
    }

    // Recordtype getter method
     function getAARecTypeMap(){
         var aaRecTypeMap = new Map();
         var result = sforce.connection.describeLayout('Applicant_Account__c');
         var recordTypes = result.recordTypeMappings;
         
         //alert('RecordtypeValue Id:' + JSON.stringify(recordTypes));
         
         for(recordType in recordTypes) {
             if(recordTypes[recordType].recordTypeId!=null){
                 aaRecTypeMap.set(recordTypes[recordType].recordTypeId,recordTypes[recordType]);
             }
         }
         
         return aaRecTypeMap;
     } 

    // Streaming api init server connection 
    function connectToServer(){
        // Connect to the CometD endpoint
        $.cometd.init({
            url: window.location.protocol+'//'+window.location.hostname+'/cometd/24.0/',
            requestHeaders: { Authorization: 'OAuth {!$Api.Session_ID}'}
        });
    }
    
    var ApplicantCLVSub;    // Streaming api CLV subscription variable
    var ApplicantAccSub;    // Streaming api Account subscription variable
    
    // Core CLV Subscription variable
    function subscribeToTopicAC(){        
        // Subscribe to a topic. JSON-encoded update will be returned
        // in the callback
        ApplicantCLVSub = $.cometd.subscribe('/topic/appCLVCreate', function(message) {
                var scope = angular.element($("#mainSM")).scope();  
                var IsTop1 = false;
                var IsTop2 = false;
            
                console.log('streaming-message Value:' + JSON.stringify(message));
                console.log('streaming-data Value:' + JSON.stringify(message.data));
                console.log('streaming-sobject Value:' + JSON.stringify(message.data.sobject));
            
                if(message.data.sobject.Match_Grade__c=='Match'){
                    message.data.sobject.User_Match_Flag__c = true;
                }else if(message.data.sobject.Match_Grade__c=='Suspect'){
                    message.data.sobject.User_Match_Flag__c = false;
                }
                
                message.data.sobject.expand = false;
                
                console.log('streaming-searchId:' + message.data.sobject.Applicant_Search__c);
                console.log('searchInfo1:' + searchInfo1);
                console.log('searchInfo2:' + searchInfo2);
            
                if(message.data.sobject.Applicant_Search__c == searchInfo1){
                    if(message.data.sobject.Match_Grade__c=='Match'){
                        scope.hasMatchCLV1.set(message.data.sobject.CLV__c,true);
                    }
                    
                    if(message.data.sobject.Message_Code__c == '9999'){
                        // Flush CLV and Streaming Here
                        resetSearch1();
                        scope.app1SValidated = true;
                        scope.app1Status = 'slds-show';
                        scope.app1Spinner = 'slds-hide';
                        scope.appMsg1 = 'Applicant 1 No Result Found.';
                        
                        streamClear();  // Clear streaming api subscription and connection
                    }else if(message.data.sobject.Message_Code__c == 'ERCS01'){
                        // Flush CLV and Streaming Here
                        resetSearch1();
                        scope.app1Status = 'slds-show';
                        scope.app1Spinner = 'slds-hide';
                        scope.appMsg1 = 'Applicant 1 clv search error. Please retry.';
                        
                        streamClear();  // Clear streaming api subscription and connection
                    }else{
                        message.data.sobject.ApplicantType = 'Applicant 1';
                        scope.searchResults.push(message.data.sobject);
                        scope.searchMap.set(message.data.sobject.Id,message.data.sobject);
                        
                        if(scope.clvCountApp1.has(message.data.sobject.CLV__c)){
                            var countVal = scope.clvCountApp1.get(message.data.sobject.CLV__c);
                            scope.clvCountApp1.set(message.data.sobject.CLV__c,countVal+1);
                        }else{
                            scope.clvCountApp1.set(message.data.sobject.CLV__c,1);
                        }
                        
                        if(scope.topCLVScoreMap.has(message.data.sobject.CLV__c)){
                            var currentScore = scope.topCLVScoreMap.get(message.data.sobject.CLV__c);
                            if(parseInt(currentScore)<parseInt(message.data.sobject.Match_Score__c)){
                               scope.topCLVScoreMap.set(message.data.sobject.CLV__c,parseInt(message.data.sobject.Match_Score__c));
                            }else if(parseInt(currentScore)==parseInt(message.data.sobject.Match_Score__c)){
                                scope.topCLVDupMap.set(message.data.sobject.CLV__c, message.data.sobject);
                            }
                        }else{
                            scope.topCLVScoreMap.set(message.data.sobject.CLV__c,parseInt(message.data.sobject.Match_Score__c));
                            scope.resultCount1 = scope.resultCount1 + 1;
                        }
                    }
                    
                }else if(message.data.sobject.Applicant_Search__c == searchInfo2){
                    if(message.data.sobject.Match_Grade__c=='Match'){
                        scope.hasMatchCLV2.set(message.data.sobject.CLV__c,true);
                    }
                    
                    if(message.data.sobject.Message_Code__c == '9999'){
                        // Flush CLV and Streaming Here
                        resetSearch2();
                        scope.app2SValidated = true;
                        scope.app2Status = 'slds-show';
                        scope.app2Spinner = 'slds-hide';
                        scope.appMsg2 = 'Applicant 2 No Result Found.';
                        
                        streamClear();  // Clear streaming api subscription and connection
                    }else if(message.data.sobject.Message_Code__c == 'ERCS01'){
                        // Flush CLV and Streaming Here
                        resetSearch2();
                        scope.app2Status = 'slds-show';
                        scope.app2Spinner = 'slds-hide';
                        scope.appMsg2 = 'Applicant 2 clv search error. Please retry.';
                        
                        streamClear();  // Clear streaming api subscription and connection
                    }else{
                        message.data.sobject.ApplicantType = 'Applicant 2';
                        scope.searchResults2.push(message.data.sobject);
                        scope.searchMap2.set(message.data.sobject.Id,message.data.sobject);
                        
                        if(scope.clvCountApp2.has(message.data.sobject.CLV__c)){
                            var countVal = scope.clvCountApp2.get(message.data.sobject.CLV__c);
                            scope.clvCountApp2.set(message.data.sobject.CLV__c,countVal+1);
                        }else{
                            scope.clvCountApp2.set(message.data.sobject.CLV__c,1);
                        }
                        
                        if(scope.topCLVScoreMap2.has(message.data.sobject.CLV__c)){
                            var currentScore = scope.topCLVScoreMap2.get(message.data.sobject.CLV__c);
                            if(parseInt(currentScore)<parseInt(message.data.sobject.Match_Score__c)){
                               scope.topCLVScoreMap2.set(message.data.sobject.CLV__c,message.data.sobject.Match_Score__c);
                            }else if(parseInt(currentScore)==parseInt(message.data.sobject.Match_Score__c)){
                                scope.topCLVDupMap2.set(message.data.sobject.CLV__c, message.data.sobject);
                            }
                        }else{
                            scope.topCLVScoreMap2.set(message.data.sobject.CLV__c,message.data.sobject.Match_Score__c);
                            scope.resultCount2 = scope.resultCount2 + 1;
                        }
                    }
                }

                scope.$apply();
            
                console.log('App 1 Search Result:' + JSON.stringify(scope.searchResults));
                console.log('App 2 Search Result:' + JSON.stringify(scope.searchResults2));
            })   
    }
    
    // Core Account Subscription variable
    function subscribeToTopicAA(){
        
        // Subscribe to a topic. JSON-encoded update will be returned
        // in the callback
        ApplicantAccSub = $.cometd.subscribe('/topic/appAccCreate', function(message) {
            var scope = angular.element($("#mainSM")).scope();  
               
                // If there's no error or no match code, pull account
                if(scope.searchMap.has(message.data.sobject.Applicant_CLV__c) || scope.searchMap2.has(message.data.sobject.Applicant_CLV__c)){
                    if(message.data.sobject.Message_Code_Host__c == '0000' || message.data.sobject.Message_Code_Host__c == '9999'){
                        if(scope.appAccResults.has(message.data.sobject.Applicant_CLV__c)){
                            var aaResults = scope.appAccResults.get(message.data.sobject.Applicant_CLV__c);
                            aaResults.push(message.data.sobject);
                            scope.appAccResults.set(message.data.sobject.Applicant_CLV__c,aaResults);
                            //console.log('clvId from AA:' + message.data.sobject.Applicant_CLV__c);
                        }else{
                            var aaResults = [];
                            aaResults.push(message.data.sobject);
                            scope.appAccResults.set(message.data.sobject.Applicant_CLV__c,aaResults);
                            //console.log('clvId from AA:' + message.data.sobject.Applicant_CLV__c);
                        }
                    }
                    
                    // commit list before doing any modal pop ups
                    scope.$apply();
                
                    console.log('Applicant 1 Has CLV:' + scope.searchMap.has(message.data.sobject.Applicant_CLV__c));
                    console.log('Applicant 2 Has CLV:' + scope.searchMap2.has(message.data.sobject.Applicant_CLV__c));
                }

                // Check Applicant who searched for the account based on its parent CLV
                if(scope.searchMap.has(message.data.sobject.Applicant_CLV__c)){
                    
                    if(message.data.sobject.Message_Code_Host__c == 'ERCS01'){
                        scope.hasAccError1 = true;
                    }else if(message.data.sobject.Message_Code_Host__c == '9999' && 
                             message.data.sobject.Match_Count__c==1){
                        scope.noMatchAcc1 = true;
                    }else if(message.data.sobject.Message_Code_Host__c == '8888'){
                        scope.hostAccFail1 = true;
                    }
                    
                    console.log('streaming-AA Message Code Host:' + message.data.sobject.Message_Code_Host__c);
                    console.log('streaming-AA Has Error:' + scope.hasAccError1);
                    
                    scope.resultCountAcc1 = scope.resultCountAcc1 + 1;
                    
                    if(scope.hasAccError1==false){ 
                        scope.CLVhasAccount.set(scope.searchMap.get(message.data.sobject.Applicant_CLV__c).CLV__c,true);
                        //scope.$apply();
                    }

                    if(message.data.sobject.Match_Count__c == scope.resultCountAcc1){
                        // Clear Timeout and Unsubscribe
                        clearTimeout(user1Timeout);
                        
                        if(scope.hasAccError1==false){ 
                            //scope.appMsg1 = 'Applicant 1 CLV result found.';
                            scope.app1Status = 'slds-hide';
                            scope.app1Spinner = 'slds-hide';
                            scope.app1MResult = 'slds-show';
                        }else if( scope.hasAccError1 == true){
                            // Clear values and unsubscribe
                            resetSearch1();
                            scope.app1Status = 'slds-show';
                            scope.app1Spinner = 'slds-hide';
                            scope.app1MResult = 'slds-hide';
                            scope.appMsg1 = 'Applicant 1 account search error. Please retry.';
                        }
                        scope.$apply(); // Commit Scope
                        streamClear();  // Clear streaming api subscription and connection
                    }else{
                        scope.$apply();
                    }    
                    
                }else if(scope.searchMap2.has(message.data.sobject.Applicant_CLV__c)){
                    
                    if(message.data.sobject.Message_Code_Host__c == 'ERCS01'){
                        scope.hasAccError2 = true;
                    }else if(message.data.sobject.Message_Code_Host__c == '9999' && 
                             message.data.sobject.Match_Count__c==1){
                        scope.noMatchAcc2 = true;
                    }else if(message.data.sobject.Message_Code_Host__c == '8888'){
                        scope.hostAccFail2 = true;
                    }
                    
                    scope.resultCountAcc2 = scope.resultCountAcc2 + 1;
                    
                    if(scope.hasAccError2==false){ 
                        scope.CLVhasAccount2.set(scope.searchMap2.get(message.data.sobject.Applicant_CLV__c).CLV__c,true);
                        //scope.$apply();
                    }

                    if(message.data.sobject.Match_Count__c == scope.resultCountAcc2){
                        // Clear Timeout and Unsubscribe
                        clearTimeout(user2Timeout);

                        if(scope.hasAccError2==false){
                            scope.app2Status = 'slds-hide';
                            scope.app2Spinner = 'slds-hide';
                            scope.app2MResult = 'slds-show';
                        }else if( scope.hasAccError2 == true){
                            // Clear values and unsubscribe
                            resetSearch2();
                            scope.app2Status = 'slds-show';
                            scope.app2Spinner = 'slds-hide';
                            scope.app2MResult = 'slds-hide';
                            scope.appMsg2 = 'Applicant 2 account search error. Please retry.';
                        }
                        
                        scope.$apply(); // Commit Scope
                        streamClear();  // Clear streaming api subscription and connection
                    }else{
                        scope.$apply();
                    }
               }
        });
    }
   
   // Core method that removes any existing streaming subscription or connection
   // if search is not on going for both applicants.
    function streamClear(){
        var scope = angular.element($("#mainSM")).scope();
        console.log('full stream clear');
        console.log('app 1 spinner:' + scope.app1Spinner);
        console.log('app 2 spinner:' + scope.app2Spinner);
        
        if(scope.app1Spinner=='slds-hide' && scope.app2Spinner=='slds-hide'){
            $.cometd.unsubscribe(ApplicantCLVSub);
            ApplicantCLVSub = undefined;
            $.cometd.unsubscribe(ApplicantAccSub);
            ApplicantAccSub = undefined;
            
            hasInitConnection = false;
            hasSubTopicAC = false;
            $.cometd.disconnect();
        }
    }
    
    // Make sure that decimal and numbers only are allowed in a field
   function isNumberKeySearch(txt, evt) {

        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode == 46) {
            //Check if the text already contains the . character
            if (txt.value.indexOf('.') === -1) {
                return true;
            } else {
                return false;
            }
        } else {
            if (charCode > 31
                 && (charCode < 48 || charCode > 57))
                return false;
        }
        return true;
    }
    
 
</script>
    
<html Id="mainSM" ng-app="sApp" ng-controller="searchResultCtrl" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <div  Id="sMatchId" class="slds top panel-collapse collapse transEffect">   
        <div class="slds-notify slds-notify--alert slds-theme--success" role="alert">
          <span class="slds-assistive-text">Info</span>
          
            <div class="slds-grid slds-grid--align-center">
                <a style="cursor:pointer;" class="{{app1MResult}}" ng-click="openSearchModal(1);"> <h3 style="font-size:20px;">Applicant 1 ({{resultCount1}} result<text ng-show="resultCount1>1">s</text> found) </h3></a>
                
                <div class="slds-col slds-col--padded {{app1Status}}">
                 <h3 style="font-size:20px;"> {{appMsg1}} </h3>
                </div>
                
                <div class="slds-col slds-col--padded">  
                    <div class="slds-spinner--small slds-container--center {{app1Spinner}}">
                      <img src="{!URLFOR($Resource.SLDS080,'/assets/images/spinners/slds_spinner_inverse.gif')}" alt="Loading..." />
                    </div>
                    
                    <svg class="slds-button__icon slds-button__icon--inverse slds-icon--small" ng-show="app1SValidated" >
                      <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#success')}"></use>
                    </svg>
                </div> 
                
                <a style="cursor:pointer;" class="{{app2MResult}}" ng-click="openSearchModal(2);"> <h3 style="font-size:20px;"> Applicant 2 ({{resultCount2}} result<text ng-show="resultCount2>1">s</text> found) </h3></a> 
                
                <div class="slds-col slds-col--padded {{app2Status}}">
                 <h3 style="font-size:20px;"> {{appMsg2}} </h3>
                </div>
                
                <div class="slds-col slds-col--padded">  
                     <div class="slds-spinner--small slds-container--center {{app2Spinner}}">
                      <img src="{!URLFOR($Resource.SLDS080,'/assets/images/spinners/slds_spinner_inverse.gif')}" alt="Loading..." />
                    </div>
                    
                    <svg class="slds-button__icon slds-button__icon--inverse slds-icon--small" ng-show="app2SValidated" >
                      <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#success')}"></use>
                    </svg>
                </div>          
            </div>
            <div class="slds-grid slds-grid--align-center" ng-show="sMatchError">
                 <div class="slds-col slds-col--padded" >
                 {{sMatchErrorErr}} 
                </div>
            </div>
        </div> 
  
    </div>

    
    <div class="slds" >         
      <div class="slds-container--medium">
     
              <!-- Search Criteria Form Fields -->
              <div class="slds-grid slds-wrap .slds-grid--vertical">
                    <!-- Search Form Applicant 1 -->
                    <form class="slds-form--stacked slds-grid slds-wrap slds-m-top--large">
                        <div class="slds-hide slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2">
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">First Name</label>
                                <div class="slds-form-element__control">
                                  <input id="fNameId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                     
                     
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Last Name</label>
                                <div class="slds-form-element__control">
                                  <input id="lNameId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                     
                     
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Date of Birth</label>
                                <div class="slds-form-element__control">
                                  <input id="dBirthId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                              
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Post Code</label>
                                <div class="slds-form-element__control">
                                  <input id="pCodeId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                    
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Previous Post Code</label>
                                <div class="slds-form-element__control">
                                  <input id="pPCodeId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                    
                             <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Mobile Phone</label>
                                <div class="slds-form-element__control">
                                  <input id="mPhoneId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                    
                            <div class="slds-form-element">
                                <label class="slds-form-element__label" for="inputSample2">Drivers License</label>
                                <div class="slds-form-element__control">
                                  <input id="dLiId" class="slds-input" type="text" placeholder="" />
                                </div>
                              </div>
                    
                            <div class="slds-form-element">
                                <div class="slds-button-group" role="group">
                                    
                                </div>   
                            </div>
                        </div>
                        <!--
                        ng-disabled="searchDisable1||app1Spinner=='slds-show'"
                        --> 
                            <input type="button" value="Search for customer" Id="app1SearchBtn" class="slds-button slds-button--brand slds-hide"
                                   ng-disabled="(searchDisable1||app1Spinner=='slds-show')&&searchBtnEnable==false"
                                   onclick="search(1); return false;" />
                        
                        
                        
                        <div Id="testSearchHelpers" class="slds-hide">
                            <!--
                            <input type="checkbox" ng-model="errTestEnable"> Enable Search Test Options (Dev Use Only)</input>
                            <br/>
                            <div ng-show="errTestEnable"> 
                                <input type="checkbox" onclick="validateSearchAndMatch(); pullSearchAndMatchInfo();">Search and Match Validate</input>
                                <br/>
                                <input type="checkbox" ng-model="mockEnable">Mock Search Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="searchBtnEnable">Search Button Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="errNoCLVEnable" ng-click="errFailCLVEnable=false;errNoAccEnable=false;errFailAccEnable=false;">No CLV Response Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="errFailCLVEnable" ng-click="errNoCLVEnable=false;errNoAccEnable=false;errFailAccEnable=false;">CLV Error Response Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="errNoAccEnable" ng-click="errFailAccEnable=false;errNoCLVEnable=false;errFailCLVEnable=false;">No Account Response Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="errFailAccEnable" ng-click="errNoAccEnable=false;errNoCLVEnable=false;errFailCLVEnable=false;">Account Error Response Enabled</input>
                                <br/>
                                <input type="checkbox" ng-model="errTimeoutEnable" >Timeout Enabled</input>
                            </div>
                            -->
                        </div>
                   </form>
                  <!-- End Search Form Applicant 1 -->
                  
                  <!-- Search Form Applicant 2 -->
                  <form class="slds-form--stacked slds-grid slds-wrap slds-m-top--large">
                       <div class="slds-hide slds-col--padded slds-size--1-of-1 slds-medium-size--2-of-2">
                           
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">First Name</label>
                                    <div class="slds-form-element__control">
                                      <input id="fNameId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                         
                         
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Last Name</label>
                                    <div class="slds-form-element__control">
                                      <input id="lNameId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                         
                         
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Date of Birth</label>
                                    <div class="slds-form-element__control">
                                      <input id="dBirthId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                                  
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Post Code</label>
                                    <div class="slds-form-element__control">
                                      <input id="pCodeId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                        
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Previous Post Code</label>
                                    <div class="slds-form-element__control">
                                      <input id="pPCodeId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                        
                                 <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Mobile Phone</label>
                                    <div class="slds-form-element__control">
                                      <input id="mPhoneId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                        
                                <div class="slds-form-element">
                                    <label class="slds-form-element__label" for="inputSample2">Drivers License</label>
                                    <div class="slds-form-element__control">
                                      <input id="dLiId2" class="slds-input" type="text" placeholder="" />
                                    </div>
                                  </div>
                        
                                <div class="slds-form-element">
                                    <div class="slds-button-group" role="group">
                                         
                                    </div>   
                                </div>   
                        </div>
                     <!-- ng-disabled="searchDisable2||app2Spinner=='slds-show'" -->
                     <input type="button" value="Search for customer" Id="app2SearchBtn" class="slds-button slds-button--brand slds-hide"
                            ng-disabled="(searchDisable2||app2Spinner=='slds-show')&&searchBtnEnable==false"
                            onclick="search(2); return false;" />
                    
                   </form>
                  <!-- End Search Form Applicant 2 -->
             </div>
            <!-- End Search Criteria Form Fields -->
        
        <!-- Search Result Form -->
        <form class="slds-form--stacked slds-grid slds-wrap slds-m-top--large">
            
          <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2">      
            <!-- Debt Table -->
              <div Id="clvDebtTable" class="slds-hide" >
                <div class="slds-box slds-theme--shade" ng-hide="(debtsList.length>0 && app1SValidated==true) || (debtsList2.length>0 && app2SValidated==true)">
                    <p align="center" style="font-size:15px;">
                        <strong>No internal debts.</strong>
                    </p>
                </div>
                  
                <table  ng-show="(debtsList.length>0 && app1SValidated==true) || (debtsList2.length>0 && app2SValidated==true)" class="slds-table slds-table--bordered slds-max-medium-table--stacked">
                    <thead>
                        <tr class="slds-text-heading--label">
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Debt Category</span>
                            </td>
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Current Balance</span>
                            </td>
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Installment Amount</span>
                            </td>
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Frequency</span>
                            </td>
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Credit Limit/Opening Balance</span>
                            </td>
                           
                             <td data-label="">
                                <span class="slds-truncate"></span>
                            </td>
                        </tr>
                    </thead>
                                        
                    <tbody ng-repeat="debtVar in debtsList" >
                        <tr class="slds-hint-parent" >

                            <td data-label="opportunity-name" role="row">
                                <span class="slds-truncate">{{debtVar.ApplicantType}} - {{debtVar.Debt_Category__c}}</span>
                            </td> 
                            
                            <td data-label="account" >
                                <span class="slds-truncate" 
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">{{debtVar.Card_Overdraft_Bal_Amt__c}}</span> <!-- Vision -->
                                <span class="slds-truncate" 
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Bal_Amt__c}}</span> <!-- Genesis and ICBS -->
                            </td>
                            <td data-label="account">
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Repay_Amt__c}}</span> <!-- Genesis and ICBS -->
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">NA</span><!-- Vision -->
                            </td>
                            <td data-label="account">
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Repay_Int__c}}</span> <!-- Genesis and ICBS -->
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">NA</span><!-- Vision -->
                            </td>
                            
                            <td data-label="account">
                                
                                <span class="slds-truncate"
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'ICBS'">{{debtVar.Car_Personal_Borrowed_Amt__c}}</span>
                                <span class="slds-truncate"
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Genesis'">{{debtVar.Car_Personal_Borrowed_Amt__c}}</span>
                                <span class="slds-truncate"
                                      ng-show="debtVar.ReduceCredit == false && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">{{debtVar.Credit_Limit_Amt__c}}</span>
                                <input ng-show="debtVar.ReduceCredit == true && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'" 
                                        type="text" class="slds-input" name="debt{{debtVar.Applicant_Account__c}}" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" 
                                       ng-model="debtVar.ReduceLimit" onchange="calculateGEDebts()"/>
                                
                                <div ng-show="floatParser(debtVar.ReduceLimit)>floatParser(debtVar.Credit_Limit_Amt__c)">
                                    <p style="color:red;" ng-show="debtVar.ReduceCredit == true && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">
                                        You cannot exceed current limit
                                    </p>
                                </div>
                            </td>
                            
                            <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">
                                <label class="slds-badge">
                                        <input type="checkbox" autocomplete="off" ng-model="debtVar.DebtConsolidate" ng-click="debtVar.ReduceCredit=false" onchange="calculateGEDebts()"/> Debt Consolidate
                                </label>
                                    
                                <label class="slds-badge">
                                    <input type="checkbox" autocomplete="off" ng-model="debtVar.ReduceCredit" ng-click="debtVar.DebtConsolidate=false" onchange="calculateGEDebts()"/> Reduce Credit Limit
                                </label>
                            </td>
                            
                            <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'ICBS'">
                                <label class="slds-badge">
                                        <input type="checkbox" autocomplete="off" ng-model="debtVar.RefinanceDebt" ng-click="recalculateRefinance(debtVar)" onchange="calculateGEDebts()"/> Refinance
                                </label>
                                
                                <span class="slds-truncate" ng-show="debtVar.RefinanceDebt==true" >
                                    <input type="button" value="Payoff Quote" class="slds-button slds-button--brand" ng-click="setAppModal(debtVar.Applicant_Account__c);"/>
                                </span> 
                            </td>
                            
                            <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Genesis'">
                                <label class="slds-badge">
                                    <input type="checkbox" autocomplete="off" ng-model="debtVar.DebtConsolidate" onchange="calculateGEDebts()"/> Debt Consolidate
                                </label>    
                            </td>
                        </tr>
                    </tbody>
                    
                    <tbody  ng-repeat="debtVar in debtsList2" ng-show="app2SValidated==true&&debtVar.duplicateDebt==false">       
                        <tr class="slds-hint-parent">

                            <td data-label="opportunity-name" role="row">
                                <span class="slds-truncate">{{debtVar.ApplicantType}} - {{debtVar.Debt_Category__c}}</span>
                            </td>
                            
                            <td data-label="account" >
                                <span class="slds-truncate" 
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">{{debtVar.Card_Overdraft_Bal_Amt__c}}</span> <!-- Vision -->
                                <span class="slds-truncate" 
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Bal_Amt__c}}</span> <!-- Genesis and ICBS -->
                            </td>
                            <td data-label="account">
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Repay_Amt__c}}</span> <!-- Genesis and ICBS -->
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">NA</span><!-- Vision -->
                            </td>
                            <td data-label="account">
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name != 'Vision'">{{debtVar.Car_Personal_Repay_Int__c}}</span> <!-- Genesis and ICBS -->
                                <span class="slds-truncate" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">NA</span><!-- Vision -->
                            </td>
                            
                            <td data-label="account">
                                
                                <span class="slds-truncate"
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'ICBS'">{{debtVar.Car_Personal_Borrowed_Amt__c}}</span>
                                <span class="slds-truncate"
                                      ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Genesis'">{{debtVar.Car_Personal_Borrowed_Amt__c}}</span>
                                
                                <span class="slds-truncate"
                                      ng-show="debtVar.ReduceCredit == false && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">{{debtVar.Credit_Limit_Amt__c}}</span>
                                <input ng-show="debtVar.ReduceCredit == true && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'" 
                                        type="text" class="slds-input" name="debt{{debtVar.Applicant_Account__c}}" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" 
                                        ng-model="debtVar.ReduceLimit" onchange="calculateGEDebts()" />

                                <div ng-show="floatParser(debtVar.ReduceLimit)>floatParser(debtVar.Credit_Limit_Amt__c)">
                                    <p style="color:red;" ng-show="debtVar.ReduceCredit == true && AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">
                                        You cannot exceed current limit
                                    </p>
                                </div>
                            </td>
                            
                           <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Vision'">
                                <label class="slds-badge">
                                        <input type="checkbox" autocomplete="off" ng-model="debtVar.DebtConsolidate" ng-click="debtVar.ReduceCredit=false" onchange="calculateGEDebts()"/> Debt Consolidate
                                </label>
                                    
                                <label class="slds-badge">
                                    <input type="checkbox" autocomplete="off" ng-model="debtVar.ReduceCredit" ng-click="debtVar.DebtConsolidate=false" onchange="calculateGEDebts()"/> Reduce Credit Limit
                                </label>
                            </td>
                            
                            <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'ICBS'">
                                <label class="slds-badge">
                                        <input type="checkbox" autocomplete="off" ng-model="debtVar.RefinanceDebt" ng-click="recalculateRefinance(debtVar)" onchange="calculateGEDebts()"/> Refinance
                                </label>
                                
                                <span class="slds-truncate" ng-show="debtVar.RefinanceDebt==true" >
                                    <input type="button" value="Payoff Quote" class="slds-button slds-button--brand" ng-click="setAppModal(debtVar.Applicant_Account__c);"/>
                                </span> 
                            </td>
                            
                            <td class="slds-row-select" ng-show="AARecTypeMap.get( applicantAccMap.get(debtVar.Applicant_Account__c).RecordTypeId).name == 'Genesis'">
                                <label class="slds-badge">
                                    <input type="checkbox" autocomplete="off" ng-model="debtVar.DebtConsolidate" onchange="calculateGEDebts()"/> Debt Consolidate
                                </label>    
                            </td>
                            
                        </tr>
                        
                    </tbody>
                </table> 
              </div>
                <!-- Disbursments -->
                
                 <table Id="clvDisburseTable" class="slds-hide slds-table slds-table--bordered slds-max-medium-table--stacked">
                    <thead>
                        <tr class="slds-text-heading--label">
                                                        
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Principal Amount</span>
                            </td>
                            <td scope="col">
                                <span class="slds-truncate">Interest Due</span>
                            </td>
                            <td scope="col">
                                <span class="slds-truncate">Late Fees Due</span>
                            </td>
                            <td scope="col">
                                <span class="slds-truncate">Penalty Interest Due</span>
                            </td>
                            <td scope="col">
                                <span class="slds-truncate">Fees or Charges Due</span>
                            </td>
                            
                            <td scope="col">
                                <span class="slds-truncate">Charges Off Amount</span>
                            </td>
                            
                            <td scope="col">
                                <span class="slds-truncate">Insurance Rebate</span>
                            </td>
                            
                            <td scope="col">
                                <span class="slds-truncate">Early Termination Fee</span>
                            </td>
                            
                            <td scope="col">
                                <span class="slds-truncate">Net Pay Off Due</span>
                            </td>                            
                        </tr>
                    </thead>
                    
                    <tbody ng-repeat="(key, val) in disburseMap">
                        
                        <tr class="slds-hint-parent">                           
                            <td data-label="opportunity-name" role="row"> 
                                <span class="slds-truncate">{{val.Principal_Amount__c}} </span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Principal_Amount__c}} -->
                            <td data-label="account">
                                <span class="slds-truncate">{{val.Interest_Due__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Interest_Due__c}} -->
                            <td data-label="account">
                                <span class="slds-truncate">{{val.Late_Fees_Due__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Late_Fees_Due__c}} -->
                            <td data-label="activity">
                                <span class="slds-truncate">{{val.Penalty_Interest_Due__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Penalty_Interest_Due__c}} -->
                            <td data-label="stage">
                                <span class="slds-truncate">{{val.Fees_or_Charges_Due__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Fees_or_Charges_Due__c}} -->
                            <td data-label="confidence">
                                <span class="slds-truncate">{{val.Charge_Off_Amount__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Charge_Off_Amount__c}} -->
                            <td data-label="activity">
                                <span class="slds-truncate">{{val.Insurance_Rebate__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Insurance_Rebate__c}} -->
                            <td data-label="stage">
                                <span class="slds-truncate">{{val.Early_Termination_Fee__c}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).Early_Termination_Fee__c}} -->
                            <td data-label="confidence">
                                <span class="slds-truncate">{{val.netPayOff}}</span>
                            </td>
                            <!-- {{disburseMap.get(keyVar).netPayOff}} -->
   
                        </tr>
                        
                    </tbody>
                </table> 
                
                
                
                 <!-- Loan -->
                 <table Id="clvLoanTable" class="slds-hide slds-table slds-table--bordered slds-max-medium-table--stacked">
                    <thead>
                        <tr class="slds-text-heading--label">
                            
                        
                            
                            <td class="slds-is-sortable" scope="col">
                                <span class="slds-truncate">Loan Amount</span>
                            </td>
                            <td scope="col">
                                <span class="slds-truncate">Reason</span>
                            </td>
                           
                            <td scope="col">
                                <span class="slds-truncate"></span>
                            </td>
                          
                         
                        </tr>
                    </thead>
                    
                    <tbody ng-repeat="(key, val) in refLoanMap"  >
                        <tr class="slds-hint-parent">          
                            
                            <td data-label="opportunity-name" role="row">
                                <span class="slds-truncate">{{val.ApplicantType}}-{{val.Loan_Amount__c}}</span>
                            </td>
                            
                            <td data-label="account">
                                <span class="slds-truncate">{{val.Value__c}}</span>
                            </td>
                    
                            <td data-label="account">
                                <span class="slds-truncate"><input type="button" value="Payoff Quote" class="slds-button slds-button--neutral" ng-click="setAppModal(val.Applicant_Account__c);"/></span>
                            </td>
                    
                           
                        </tr>
                        
                    </tbody>
                </table> 
              </div>    
        </form >
       </div>
      </div>  
    
    <div class="modal fade" id="sModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
          <div class="modal-dialog" style="min-height:100% !important;min-width:100% !important;" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Search and Match</h4>
              </div>
              <div class="modal-body">
      
                <div class="slds" > 
                    
                    
                   
                    <div class="slds-tabs--default">
                      <ul class="slds-tabs--default__nav" role="tablist">
                        <li ng-show="app1Spinner=='slds-hide'&&searchResults.length>0" class="slds-tabs__item slds-text-heading--label {{tabFlip==true ? 'slds-active' : ''}}" 
                            title="Item One" role="presentation" ng-click="tabFlip=true;openSearchModal(1);"><a href="#" role="tab" tabindex="0" aria-controls="tab-default-1">Applicant 1</a></li>
                        <li ng-show="app2Spinner=='slds-hide'&&app2SearchShow&&searchResults2.length>0" class="slds-tabs__item slds-text-heading--label {{tabFlip==false ? 'slds-active' : ''}}" 
                            title="Item Two" role="presentation" ng-click="tabFlip=false;openSearchModal(2);"><a href="#" role="tab" tabindex="-1" aria-controls="tab-default-2">Applicant 2</a></li>
                      </ul>
                        
                      <div id="tab-default-1" class="slds-tabs__content" ng-show="tabFlip" role="tabpanel">
                         <table class="slds-table {{showSResult}}">
                            <!--  Table Header -->
                              <thead>
                                <tr class="slds-text-heading--label">
                                  <th class="slds-cell-shrink" scope="col">
                                  </th>
                                  <th class="slds-is-sortable" scope="col">
                                    <span class="slds-truncate">Name</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Date of Birth</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Residential Address</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Mobile Number</span>
                                  </th>
                                    
                                  <th scope="col">
                                    <span class="slds-truncate">Driver's License</span>
                                  </th>
                                    
                                  <th scope="col">
                                    <span class="slds-truncate">CLV Number</span>
                                  </th>
                                  
                                  <th scope="col">
                                    <span class="slds-truncate">Match Grade</span>
                                  </th>
                                  <!--
                                  <th scope="col">
                                    <span class="slds-truncate">Match Score</span>
                                  </th>
                                  -->
                                  <th scope="col">
                                    <span class="slds-truncate"></span>
                                  </th>
                                  
                                </tr>
                              </thead>
                            
                            <!-- Start Applicant 1 Search Result -->
                             <tbody ng-repeat="result in searchResults | orderBy:['CLV__c','-Match_Score__c']" 
                                    ng-show="checkTopCLV(result,1)">
                                <tr class="slds-hint-parent">
                                  <td class="slds-row-select">
                                    <label class="slds-checkbox" ng-hide="result.Match_Grade__c=='Match'">
                                      <input name="select-row1" type="checkbox" ng-model="result.User_Match_Flag__c" ng-change="selectChildCLV(1,result)"/>
                                      <span class="slds-checkbox--faux"></span>
                                    </label>
                                 
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c=='Match'">
                                      <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small">
                                        <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#check')}"></use>
                                      </svg>
                                    </span>
                                    
                                  </td>
                                 
                                  <td data-label="opportunity-name" role="row">
                                      <span class="slds-truncate">{{result.Title__c + ' ' + result.First_Name__c + ' ' +  result.Middle_Name__c + ' ' + result.Surname__c}}</span>
                                 </td>
                                  <td data-label="account">
                                      <span class="slds-truncate">{{result.Date_of_Birth__c}}</span>
                                  </td>
                                    
                                  <td data-label="activity">
                                    <span class="slds-truncate">{{result.Street_Address__c + ' ' + result.Suburb__c + ' ' + result.State__c + ' ' + result.Post_Code__c }}</span>
                                  </td>
                                  <td data-label="stage">
                                    <span class="slds-truncate">{{result.Mobile__c}}</span>
                                  </td>
                                    
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.Drivers_License__c}}</span>
                                  </td>
                                    
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.CLV__c}}</span>
                                  </td>
                                  
                                  <td data-label="confidence">
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c=='Suspect'">Possible Match</span>
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c!='Suspect'">{{result.Match_Grade__c}}</span>
                                  </td>
                                    <!--
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.Match_Score__c}}</span>
                                  </td>
                                 -->
                                  <td data-label="confidence">
                                      <span class="slds-truncate" ng-hide="clvCountApp1.get(result.CLV__c)==1">
                                          <button class="slds-button slds-button--icon-border-filled slds-button--icon-x-small" data-toggle="collapse" ng-click="result.expand = !result.expand" data-parent="#wrap{{result.CLV__c}}" data-target=".collapseme{{result.CLV__c}}"> 
                                              <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small" ng-hide="result.expand">
                                                  <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                                              </svg>
                                              
                                              <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small" ng-show="result.expand">
                                                  <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#dash')}"></use>
                                              </svg>
                                          </button> 
                                      </span>
                                  </td>
                                    
                                </tr>
                            
                                 <div Id="wrap{{result.CLV__c}}">
                                
                                 <!-- Duplicate CLV -->
                                 <tr class="collapse out collapseme{{result.CLV__c}}" ng-repeat="dupCLV in searchResults | orderBy:['-Match_Score__c']" 
                                     ng-show="result.Id!=dupCLV.Id && result.CLV__c == dupCLV.CLV__c">
                                     <td class="slds-row-select">
                                        <label class="slds-checkbox slds-hide" >
                                          <input name="select-row1" class="{{result.Id}}childCLV" type="checkbox" ng-model="dupCLV.User_Match_Flag__c" 
                                                 ng-init="dupCLV.User_Match_Flag__c=hasMatchCLV1.has(dupCLV.CLV__c)"/>
                                                
                                          <span class="slds-checkbox--faux"></span>
                                        </label>
                                     </td>
                                     
                                     <td data-label="opportunity-name" role="row">
                                         <span class="slds-truncate">{{dupCLV.Title__c + ' ' + dupCLV.First_Name__c + ' ' +  dupCLV.Middle_Name__c + ' ' + dupCLV.Surname__c}}</span>
                                     </td>
                                     <td data-label="account">
                                         <span class="slds-truncate">{{dupCLV.Date_of_Birth__c}}</span>
                                     </td>
                                     
                                     <td data-label="activity">
                                         <span class="slds-truncate">{{dupCLV.Street_Address__c + ' ' + dupCLV.Suburb__c + ' ' + dupCLV.State__c + ' ' + dupCLV.Post_Code__c }}</span>
                                     </td>
                                     <td data-label="stage">
                                         <span class="slds-truncate">{{dupCLV.Mobile__c}}</span>
                                     </td>
                                     
                                     <td data-label="confidence">
                                        <span class="slds-truncate">{{dupCLV.Drivers_License__c}}</span>
                                    </td>
                                     
                                     <td data-label="confidence">
                                         <span class="slds-truncate">{{dupCLV.CLV__c}}</span>
                                     </td>
                                     
                                     <td data-label="confidence">
                                         <span class="slds-truncate" ng-show="dupCLV.Match_Grade__c=='Suspect'">Possible Match</span>
                                        <span class="slds-truncate" ng-show="dupCLV.Match_Grade__c!='Suspect'">{{dupCLV.Match_Grade__c}}</span>
                                     </td>
                                     <!--
                                     <td data-label="confidence">
                                         <span class="slds-truncate">{{dupCLV.Match_Score__c}}</span>
                                     </td>
                                     -->
                                     <td data-label="confidence">
                                         
                                     </td>
                                     
                                 </tr>
 
                                 <!-- Account -->
                                 <!--
                                 <tr class="collapse out collapseme{{result.CLV__c}}" >
                                -->
                                     
                                 <tr ng-show="appAccResults.get(result.Id)==null||noMatchAcc1==true">
                                    <td colspan="9">
                                        <div class="slds-box slds-theme--shade">
                                          <p align="center" style="font-size:15px;">
                                            <strong>No Active Accounts.</strong>
                                          </p>
                                        </div>
                                    </td>
                                 </tr>
                                     
                                 <tr  ng-show="appAccResults.get(result.Id)!=null&&noMatchAcc1==false">
                                     
                                    <td colspan="9">
                                        <!-- Applicant Account Result Table -->
                                        <table class="slds-table slds-table--bordered">
                                            <!--
                                            {{topCLVScoreMap.get(result.CLV__c)}}
                                            -->
                                            <thead>
                                                <tr class="slds-text-heading--label">
                                                  <td scope="col">
                                                    <span class="slds-truncate">Product Type</span>
                                                  </td>
                                                  <td class="slds-is-sortable" scope="col">
                                                    <span class="slds-truncate">Account Number</span>
                                                  </td>
                                                  <td scope="col">
                                                    <span class="slds-truncate">Current Balance</span>
                                                  </td>
                                                 
                                                  <td scope="col">
                                                      <span class="slds-truncate">Credit Limit/Opening Balance</span>
                                                  </td>
                                                <!--
                                                  <td scope="col">
                                                    <span class="slds-truncate">Installment Amount</span>
                                                   </td>
                                                    -->
                                                </tr>
                                              </thead>
                                            
                                            <tbody ng-repeat="aaVar in appAccResults.get(result.Id)">
                                                
                                                <tr class="slds-hint-parent">
                                                  <td data-label="account" > 
                                                      <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Product_Type__c}}</span>
                                                      <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Vision'" class="slds-truncate">{{aaVar.Host_System_Identifier__c}}</span>
                                                  </td>
                                                  <td data-label="opportunity-name" role="row">
                                                      <span class="slds-truncate">{{aaVar.Account_Number__c}}</span>
                                                 </td>
                                                
                                                  
                                                  <td data-label="activity">
                                                    <span class="slds-truncate">{{aaVar.Current_Balance__c}}</span>
                                                  </td>
                                                   
                                                  <td data-label="confidence" > 
                                                     <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Maximum_Credit_Limit__c}}</span>
                                                     <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'ICBS'" class="slds-truncate">{{aaVar.Opening_Balance__c}}</span>
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'" class="slds-truncate">{{aaVar.Amount_Financed__c}}</span>
                                                      
                                                  </td>
                                                  <!--
                                                  <td data-label="activity">
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'"  class="slds-truncate">{{aaVar.Next_Payment_Amount_Due__c}}</span>
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Genesis'" class="slds-truncate">{{aaVar.Installment_Amount__c}}</span>
                                                  </td>
                                                    -->
                                                </tr>
                                            </tbody>
                                     </table> 
                                     <!-- End Applicant Account Result Table -->
                                        
                                  </td>    
                           
                                </tr>
     
                               </div>
                                
                              </tbody>
                              <!-- End Applicant 1 Search Result -->
                          </table>
                        
                          
                      </div>

                     <div id="tab-default-2" class="slds-tabs__content" ng-hide="tabFlip" role="tabpanel">
                         <table class="slds-table {{showSResult}}">
                            <!--  Table Header -->
                              <thead>
                                <tr class="slds-text-heading--label">
                                  <th class="slds-cell-shrink" scope="col">
                                    
                                  </th>
                                  <th class="slds-is-sortable" scope="col">
                                    <span class="slds-truncate">Name</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Date of Birth</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Residential Address</span>
                                  </th>
                                  <th scope="col">
                                    <span class="slds-truncate">Mobile Number</span>
                                  </th>
                                  
                                  <th scope="col">
                                    <span class="slds-truncate">Driver's License</span>
                                  </th>
                                    
                                  <th scope="col">
                                    <span class="slds-truncate">CLV Number</span>
                                  </th>
                                  
                                  <th scope="col">
                                    <span class="slds-truncate">Match Grade</span>
                                  </th>
                                  <!--
                                  <th scope="col">
                                    <span class="slds-truncate">Match Score</span>
                                  </th>
                                  -->
                                  <th scope="col">
                                    <span class="slds-truncate"></span>
                                  </th>
                                </tr>
                              </thead>
                            
                            <!-- Start Applicant 2 Search Result -->
                             <tbody ng-repeat="result in searchResults2 | orderBy:['CLV__c','-Match_Score__c']" 
                                    ng-show="checkTopCLV(result,2)">
                                <tr class="slds-hint-parent">
                                  <td class="slds-row-select">
                                    <label class="slds-checkbox" ng-hide="result.Match_Grade__c=='Match'">
                                      <input name="select-row1" type="checkbox" ng-model="result.User_Match_Flag__c" ng-change="selectChildCLV(2,result)"/>
                                      <span class="slds-checkbox--faux"></span>
                                    </label>
                                      
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c=='Match'">
                                      <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small">
                                        <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#check')}"></use>
                                      </svg>
                                    </span>
                                      
                                  </td>
                                 
                                    
                                    <td data-label="opportunity-name" role="row">
                                      <span class="slds-truncate">{{result.Title__c + ' ' + result.First_Name__c + ' ' +  result.Middle_Name__c + ' ' + result.Surname__c}}</span>
                                 </td>
                                  <td data-label="account">
                                      <span class="slds-truncate">{{result.Date_of_Birth__c}}</span>
                                  </td>
                                    
                                  <td data-label="activity">
                                    <span class="slds-truncate">{{result.Street_Address__c + ' ' + result.Suburb__c + ' ' + result.State__c + ' ' + result.Post_Code__c }}</span>
                                  </td>
                                  <td data-label="stage">
                                    <span class="slds-truncate">{{result.Mobile__c}}</span>
                                  </td>
                                    
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.Drivers_License__c}}</span>
                                  </td>
                                    
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.CLV__c}}</span>
                                  </td>
                                  
                                  <td data-label="confidence">
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c=='Suspect'">Possible Match</span>
                                    <span class="slds-truncate" ng-show="result.Match_Grade__c!='Suspect'">{{result.Match_Grade__c}}</span>
                                  </td>
                                  <!--  
                                  <td data-label="confidence">
                                    <span class="slds-truncate">{{result.Match_Score__c}}</span>
                                  </td>
                                  -->
                                    
                                  <td data-label="confidence">
                                      <!--
                                        ng-show="topCLVDupMap2.has(result.CLV__c) == true"
                                      -->
                                      <span class="slds-truncate" ng-hide="clvCountApp2.get(result.CLV__c)==1">                                          
                                          <button class="slds-button slds-button--icon-border-filled slds-button--icon-x-small" data-toggle="collapse" ng-click="result.expand = !result.expand" data-parent="#wrap2{{result.CLV__c}}" data-target=".collapseme2{{result.CLV__c}}"> 
                                              <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small" ng-hide="result.expand">
                                                  <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#add')}"></use>
                                              </svg>
                                              
                                              <svg class="slds-button__icon slds-button__icon--inverse slds-icon--x-small" ng-show="result.expand">
                                                  <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#dash')}"></use>
                                              </svg>
                                          </button> 
                                      </span>
                                      
                                      
                                   </td>
                                </tr>

                                 <div Id="wrap2{{result.CLV__c}}">
                                     
                                 <!-- Duplicate CLV -->
                                 <tr class="collapse out collapseme2{{result.CLV__c}}" ng-repeat="dupCLV in searchResults2 | orderBy:['-Match_Score__c']" ng-show="result.Id!=dupCLV.Id && result.CLV__c == dupCLV.CLV__c">
                                     <td class="slds-row-select">
                                        <label class="slds-checkbox" ng-hide="true">
                                          <input name="select-row1" class="{{result.Id}}childCLV" type="checkbox" ng-model="dupCLV.User_Match_Flag__c" 
                                                 ng-init="dupCLV.User_Match_Flag__c=hasMatchCLV2.has(dupCLV.CLV__c)"/>
                                          <span class="slds-checkbox--faux"></span>
                                        </label>
                                     </td>
                                     
                                     <td data-label="opportunity-name" role="row">
                                         <span class="slds-truncate">{{dupCLV.Title__c + ' ' + dupCLV.First_Name__c + ' ' +  dupCLV.Middle_Name__c + ' ' + dupCLV.Surname__c}}</span>
                                     </td>
                                     <td data-label="account">
                                         <span class="slds-truncate">{{dupCLV.Date_of_Birth__c}}</span>
                                     </td>
                                     
                                     <td data-label="activity">
                                         <span class="slds-truncate">{{dupCLV.Street_Address__c + ' ' + dupCLV.Suburb__c + ' ' + dupCLV.State__c + ' ' + dupCLV.Post_Code__c }}</span>
                                     </td>
                                     <td data-label="stage">
                                         <span class="slds-truncate">{{dupCLV.Mobile__c}}</span>
                                     </td>
                                     
                                     <td data-label="confidence">
                                        <span class="slds-truncate">{{dupCLV.Drivers_License__c}}</span>
                                      </td>
                                     
                                     <td data-label="confidence">
                                         <span class="slds-truncate">{{dupCLV.CLV__c}}</span>
                                     </td>
                                     
                                     <td data-label="confidence">
                                          <span class="slds-truncate" ng-show="dupCLV.Match_Grade__c=='Suspect'">Possible Match</span>
                                          <span class="slds-truncate" ng-show="dupCLV.Match_Grade__c!='Suspect'">{{dupCLV.Match_Grade__c}}</span>
                                     </td>
                                     <!--
                                     <td data-label="confidence">
                                         <span class="slds-truncate">{{dupCLV.Match_Score__c}}</span>
                                     </td>
                                     -->
                                     
                                     <td data-label="confidence">
                                         
                                     </td>
                                     
                                 </tr>
 
                                 <!-- Account -->
                                 <!--
                                 <tr class="collapse out collapseme2{{result.CLV__c}}" >
                                    -->
                                     
                                 <tr ng-show="appAccResults.get(result.Id)==null||noMatchAcc2==true">
                                    <td colspan="9">
                                        <div class="slds-box slds-theme--shade">
                                          <p align="center" style="font-size:15px;">
                                            <strong>No Active Accounts.</strong>
                                          </p>
                                        </div>
                                    </td>
                                 </tr>
                                     
                                 <tr ng-show="appAccResults.get(result.Id)!=null&&noMatchAcc2==false">
                                    <td colspan="9">
                                        <!-- Applicant Account Result Table -->
                                        <table class="slds-table slds-table--bordered">
                                            <!--
                                            {{topCLVScoreMap.get(result.CLV__c)}}
                                            -->
                                            <thead>
                                                <tr class="slds-text-heading--label">
                                                    <td scope="col">
                                                    <span class="slds-truncate">Product Type</span>
                                                  </td>
                                                  <td class="slds-is-sortable" scope="col">
                                                    <span class="slds-truncate">Account Number</span>
                                                  </td>
                                                  <td scope="col">
                                                    <span class="slds-truncate">Current Balance</span>
                                                  </td>
                                                 
                                                  <td scope="col">
                                                      <span class="slds-truncate">Credit Limit/Opening Balance</span>
                                                  </td>
                                               <!--
                                                  <td scope="col">
                                                    <span class="slds-truncate">Installment Amount</span>
                                                   </td>
                                                -->
                                                </tr>
                                              </thead>
                                            
                                            <tbody ng-repeat="aaVar in appAccResults.get(result.Id)">
                                                
                                                 <tr class="slds-hint-parent">
                                                   <td data-label="account">
                                                      <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Product_Type__c}}</span>
                                                      <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Vision'" class="slds-truncate">{{aaVar.Host_System_Identifier__c}}</span>
                                                  </td>
                                                     
                                                  <td data-label="opportunity-name" role="row">
                                                      <span class="slds-truncate">{{aaVar.Account_Number__c}}</span>
                                                 </td>
                                                
                                                  
                                                  <td data-label="activity">
                                                    <span class="slds-truncate">{{aaVar.Current_Balance__c}}</span>
                                                  </td>
                                                   
                                                  <td data-label="confidence" > <!-- Vision -->
                                                     <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Maximum_Credit_Limit__c}}</span>
                                                     <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'ICBS'" class="slds-truncate">{{aaVar.Opening_Balance__c}}</span>
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'" class="slds-truncate">{{aaVar.Amount_Financed__c}}</span>
                                                  </td>
                                                  <!--
                                                  <td data-label="activity">
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'"  class="slds-truncate">{{aaVar.Next_Payment_Amount_Due__c}}</span>
                                                    <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Genesis'" class="slds-truncate">{{aaVar.Installment_Amount__c}}</span>
                                                  </td>
                                                  -->
                                                </tr>
                                            </tbody>
                                     </table> 
                                     <!-- End Applicant Account Result Table -->
                                        
                                  </td>    
                           
                                </tr>
     
                               </div>
                                 
                                
                              </tbody>
                              <!-- End Applicant 2 Search Result -->
                          </table>
                         
                         
                       
                      </div>
                        
                        
                         
                        
                        
                    </div>                            
               
                    <div class="slds-tabs__content {{showAAResult}}" role="tabpanel">
                          <!-- List of Applicant Accounts -->
                          
                                <table class="slds-table">
                                                    <thead>
                                                        <tr class="slds-text-heading--label">
                                                            <td scope="col">
                                                            <span class="slds-truncate">Product Type</span>
                                                          </td>
                                                          <td class="slds-is-sortable" scope="col">
                                                            <span class="slds-truncate">Account Number</span>
                                                          </td>
                                                          <td scope="col">
                                                            <span class="slds-truncate">Current Balance</span>
                                                          </td>
                                                         
                                                          <td scope="col">
                                                              <span class="slds-truncate">Credit Limit/Opening Balance</span>
                                                          </td>
                                                            <!--
                                                          <td scope="col">
                                                            <span class="slds-truncate">Installment Amount</span>
                                                           </td>
                                                            -->
                                                        </tr>
                                                      </thead>
                                                    <!-- | filter:{ Account_Type__c: 'ICBS' } -->
                                                    <tbody ng-repeat="aaVar in applicantAccList" 
                                                           ng-show="(aaVar.ApplicantType == 'Applicant 1' && tabFlip==true) || (aaVar.ApplicantType == 'Applicant 2' && tabFlip==false)">
                                                        
                                                        <tr class="slds-hint-parent" >

                                                          <!-- ng-show="involvePartyMap.get(aaVar.Id).length>1" -->
                                                            
                                                          <td data-label="account">
                                                              <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Product_Type__c}}</span>
                                                              <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Vision'" class="slds-truncate">{{aaVar.Host_System_Identifier__c}}</span>
                                                          </td>
                                                            
                                                          <td data-label="opportunity-name" role="row">
                                                              <span class="slds-truncate">{{aaVar.Account_Number__c}}</span>
                                                         </td>
                                                        
                                                          
                                                          <td data-label="activity">
                                                            <span class="slds-truncate">{{aaVar.Current_Balance__c}}</span>
                                                          </td>
                                                           
                                                          <td data-label="confidence" > 
                                                             <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Vision'" class="slds-truncate">{{aaVar.Maximum_Credit_Limit__c}}</span>
                                                             <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'ICBS'" class="slds-truncate">{{aaVar.Opening_Balance__c}}</span>
                                                            <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'" class="slds-truncate">{{aaVar.Amount_Financed__c}}</span>
                                                          </td>
                                                          <!--
                                                          <td data-label="activity">
                                                            <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name == 'Genesis'"  class="slds-truncate">{{aaVar.Next_Payment_Amount_Due__c}}</span>
                                                            <span ng-show="AARecTypeMap.get( aaVar.RecordTypeId).name != 'Genesis'" class="slds-truncate">{{aaVar.Installment_Amount__c}}</span>
                                                          </td>
                                                            -->
                                                        </tr>
                                                    </tbody>
                                             </table> 
                        
                         
                             <!-- Folder Table Selection -->
                                            <!--
                                            <div Id="iParty{{aaVar.Id}}">
                                              <div class="collapse out iPartyTable{{aaVar.Id}}" >
                                                -->
                                                <table class="slds-table slds-table--bordered">
                                                    <thead>
                                                        <tr class="slds-text-heading--label">
                                                            <td class="slds-is-sortable" scope="col">
                                                                <span class="slds-truncate">Full Name</span>
                                                            </td>
                                                            
                                                            <td class="slds-is-sortable" scope="col">
                                                                <span class="slds-truncate">Relationship Type</span>
                                                            </td>
                                                            
                                                            <td class="slds-is-sortable" scope="col">
                                                                <span class="slds-truncate">ICBS Customer Number</span>
                                                            </td>
                                                            
                                                            <td class="slds-is-sortable" scope="col">
                                                                <span class="slds-truncate">Solicit Flag</span>
                                                            </td>
                                                            <td class="slds-is-sortable" scope="col">
                                                                <span class="slds-truncate"></span>
                                                            </td>
                                                        </tr>
                                                    </thead>

                                                    

                                                    <!-- | filter:{ Account_Type__c: 'ICBS' } -->
                                                    <tbody ng-repeat="aaVar in applicantAccList"  
                                                           ng-show="(aaVar.ApplicantType == 'Applicant 1' && tabFlip==true) || (aaVar.ApplicantType == 'Applicant 2' && tabFlip==false)">
                                                        
                                                            <!-- ng-show="involvePartyMap.get(aaVar.Id).length>1" -->
                                                        
                                                            <tr class="slds-hint-parent" ng-repeat="aIPVar in involvePartyMap.get(aaVar.Id)" 
                                                                ng-show="(aaVar.ApplicantType == 'Applicant 1'&&appAccCust2.Customer_Number__c!=aIPVar.Customer_Identifier__c)||
                                                                          (aaVar.ApplicantType == 'Applicant 2'&&appAccCust.Customer_Number__c!=aIPVar.Customer_Identifier__c)">
                                                                <td data-label="opportunity-name" role="row">
                                                                    <span class="slds-truncate"> {{aIPVar.Full_Name__c}}</span>
                                                                </td>
                                                                <td data-label="opportunity-name" role="row">
                                                                    <span class="slds-truncate"> {{aIPVar.Relationship_Type__c}}</span>
                                                                </td>
                                                                <td data-label="opportunity-name" role="row">
                                                                    <span class="slds-truncate"> {{aIPVar.Customer_Identifier__c}}</span>
                                                                </td>
                                                                <td data-label="opportunity-name" role="row">
                                                                    <span class="slds-truncate" ng-show="aIPVar.SolicitFlag__c==true"> 1 </span>
                                                                    <span class="slds-truncate" ng-show="aIPVar.SolicitFlag__c==false"> 0 </span>
                                                                </td>
                                                                <td data-label="opportunity-name" role="row">
                                                                    <label class="slds-checkbox" ng-click="unSelectOtherFolder(aIPVar)">
                                                                        <input name="select-row1" type="checkbox" ng-model="aIPVar.involvePartySelected" ng-click="unSelectOtherFolder(aIPVar)"/>
                                                                        <span class="slds-checkbox--faux" ng-click="unSelectOtherFolder(aIPVar)"></span> 
                                                                    </label>
                                                                  </td>
                                                            </tr>
                                                    </tbody>
                                                    
                                                </table> 
                                            <!--
                                           </div>
                                        </div>
                                        -->
                    </div>              
                  </div>
            </div>
              <div class="modal-footer">
                  <div class="slds" > 
                      <div class="slds-button-group slds-grid--align-center" role="group">
                          
                          <button class="slds-button slds-button--neutral {{showAAResult}}" ng-click="returnSearchModal();">
                             <svg class="slds-button__icon slds-button__icon--inverse slds-icon--small">
                                <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#back')}"></use>
                              </svg>
                          </button>
                          
                          <button class="slds-button slds-button--neutral slds-button--brand {{showSResult}}" ng-disabled="disableCLVButton" ng-click="populateDebts()">Confirm</button>
                          <!--
                          <button class="slds-button slds-button--neutral {{showAAResult}}" ng-click="returnSearchModal();">Return</button>
                          -->
                          
                          <!--
                          <button class="slds-button slds-button--neutral slds-button--brand {{showAAResult}}" ng-click="finalizeDebts()" data-dismiss="modal">Select Folder</button>
                          -->
                          <button class="slds-button slds-button--neutral slds-button--brand {{showAAResult}}" ng-click="processFolder()" data-dismiss="modal">Select Folder</button>
                          
                          <!--
                          <button class="slds-button slds-button--neutral" data-dismiss="modal">Close</button>
                          -->
                          
                          <button class="slds-button slds-button--neutral" data-dismiss="modal">
                              Cancel
                            <!--
                            <svg class="slds-button__icon slds-button__icon--inverse slds-icon--small">
                                <use xlink:href="{!URLFOR($Resource.SLDS080,'/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                              </svg>
                             -->
                          </button>
                        
                      </div>
                  </div>
              </div>
                
            </div>
          </div>
        </div>
    
    <!-- Modal -->
 
        <div class="modal fade" id="accModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Payoff Quote</h4>
              </div>
              <div class="modal-body">

                   <div class="slds" > 
                        <div class="slds-container--medium">
                       <form class="slds-form--stacked slds-grid slds-wrap slds-m-top--large">
                         <div class="slds-col--padded slds-size--1-of-1 slds-medium-size--1-of-2">
                              
                              <!--
                             <div class="slds-form-element">
                                <label class="slds-form-element__label" for="textareaSample2">Disbursement Account Type</label>
                                <div class="slds-form-element__control">
                                  
                                    <label id="Years_Self_Employed__c"  style="font-size:30px;" class="slds-form-element__label" placeholder="" > 
                                        
                                    </label>
                                </div>
                              </div>
                             
                             <div class="slds-form-element">
                                <label class="slds-form-element__label" for="textareaSample2">Disbursement Outcome</label>
                                <div class="slds-form-element__control">
                                  
                                    <label id="Years_Self_Employed__c"  style="font-size:30px;" class="slds-form-element__label" placeholder="" > 
                                        
                                    </label>
                                </div>
                              </div>
                             -->
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Account Number</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input ng-disabled="true" class="slds-input" type="text" value="{{applicantAccMapTemp.get(loanAppAcc).Account_Number__c}}"/>
                                    </div>
                                </section>
                            </div>
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Payout Effective Date</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input ng-disabled="true" class="slds-input" type="text" value="{{pullDateToday()}}"/>
                                    </div>
                                </section>
                            </div>
                             
                            <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Interest Rate</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input class="slds-input" maxlength="5" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder=""
                                               ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Interest_Rate__c" 
                                               ng-change="recalculatePayOff(loanAppAcc)"
                                               onblur="if(this.value==null||this.value>99.99||this.value==''){
                                                               var scope = angular.element($('#mainSM')).scope();
                                                               scope.applicantAccMapTemp.get(scope.loanAppAcc).RPQ_Interest_Rate__c=0;
                                                               scope.recalculatePayOff(scope.loanAppAcc); 
                                                               scope.$apply();
                                                        }"/> 
                                        <p style="color:red;" ng-show="applicantAccMapTemp.get(loanAppAcc).RPQ_Interest_Rate__c>99.99">Please enter a valid percentage rate in format 00.00</p>
                                    </div>
                                </section>
                            </div>
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Principal Amount</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField1" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Principal_Amount__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Interest Due</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField2" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Interest_Due__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             
                             
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Late Fees Due</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField3" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Late_Fees_Due__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Penalty Interest Due</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField4" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Penalty_Interest_Due__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Fees or Charges Due</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField5" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Fees_or_Charges_Due__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                            
                             
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Charge of Amount</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField6" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Charge_Off_Amount__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Insurance Rebate</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField7" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Insurance_Rebate__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Early Termination Fee</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <input name="refField8" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).RPQ_Early_Termination_Fee__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                            </div>
                             
                             <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Applicable Party</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                        <!--
                                        <input ng-disabled="true" class="slds-input" type="text" value="{{applicantAccMapTemp.get(loanAppAcc).ApplicantType}}"/>
                                        -->
                                        <input ng-disabled="true" class="slds-input" type="text" value="{{disburseMap[loanAppAcc].Applicable_Party__c}}"/>
                                    </div>
                                </section>
                            </div>
                             
                           <!--
                              <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Retrieved Payoff Amount</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left"> 
                                    <div class="slds-form-element__control">
                                        <input name="refField9" class="slds-input" maxlength="18" onkeypress="return isNumberKeySearch(this,event);" type="text" placeholder="" 
                                         ng-change="recalculatePayOff(loanAppAcc)" ng-model="applicantAccMapTemp.get(loanAppAcc).Retrieved_Payoff_Amount__c" onblur="if(this.value==null||this.value==''){this.value=0}"/>
                                    </div>
                                </section>
                              </div>
                            -->
                              <div class="slds-grid slds-wrap slds-m-vertical--xx-small">
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-4 slds-text-align--right">
                                       <label class="slds-form-element__label" for="app1_mobile__c">Net Payoff Amount</label>
                                </section>
                                <section class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--3-of-4 slds-text-align--left">
                                    <div class="slds-form-element__control">
                                         <label id="Years_Self_Employed__c"  style="font-size:30px;" class="slds-form-element__label" placeholder="" > 
                                            {{refLoanMap[loanAppAcc].Loan_Amount__c}}
                                        </label>
                                    </div> 
                                </section>
                            </div>
                             
                        
                         </div>
                       </form>
                       </div>
                    </div>
                   
              </div>
              <div class="modal-footer">
                   
              </div>
                
            </div>
          </div>
        </div>
        
    
</html> 

<style>
    .top {
      position: fixed;
      top: 0;
      left: 0;
      z-index: 999;
      width: 100%;
      height:40px !important;
    }    

    .transEffect{
        opacity: 0.4;
        filter: alpha(opacity=40); /* For IE8 and earlier */
    }
    
    .transEffect:hover {
        opacity: 1.0;
        filter: alpha(opacity=100); /* For IE8 and earlier */
    } 
    .modal-body{
        max-height: calc(100vh - 200px);
        overflow-y: auto;
        overflow-x: auto;
    }

</style>
</apex:page>